// ******************************************************************
// *
// *    .,-:::::    .,::      .::::::::.    .,::      .:
// *  ,;;;'````'    `;;;,  .,;;  ;;;'';;'   `;;;,  .,;;
// *  [[[             '[[,,[['   [[[__[[\.    '[[,,[['
// *  $$$              Y$$$P     $$""""Y$$     Y$$$P
// *  `88bo,__,o,    oP"``"Yo,  _88o,,od8P   oP"``"Yo,
// *    "YUMMMMMP",m"       "Mm,""YUMMMP" ,m"       "Mm,
// *
// *   Cxbx->Win32->CxbxKrnl->EmuD3D8->Convert.h
// *
// *  This file is part of the Cxbx project.
// *
// *  Cxbx and Cxbe are free software; you can redistribute them
// *  and/or modify them under the terms of the GNU General Public
// *  License as published by the Free Software Foundation; either
// *  version 2 of the license, or (at your option) any later version.
// *
// *  This program is distributed in the hope that it will be useful,
// *  but WITHOUT ANY WARRANTY; without even the implied warranty of
// *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// *  GNU General Public License for more details.
// *
// *  You should have recieved a copy of the GNU General Public License
// *  along with this program; see the file COPYING.
// *  If not, write to the Free Software Foundation, Inc.,
// *  59 Temple Place - Suite 330, Bostom, MA 02111-1307, USA.
// *
// *  (c) 2002-2003 Aaron Robinson <caustik@caustik.com>
// *
// *  All rights reserved
// *
// ******************************************************************
#ifndef CONVERT_H
#define CONVERT_H

#include "CxbxKrnl.h"

// simple render state encoding lookup table
#define X_D3DRSSE_UNK 0x7fffffff
extern CONST DWORD EmuD3DRenderStateSimpleEncoded[174];

typedef void(*FormatToARGBRow)(const uint8* src, uint8* dst_argb, int width);

extern const FormatToARGBRow EmuXBFormatComponentConverter(X_D3DFORMAT Format);

bool EmuXBFormatCanBeConvertedToARGB(X_D3DFORMAT Format);

bool EmuXBFormatRequiresConversionToARGB(X_D3DFORMAT Format);

// how many bits does this format use per pixel?
extern DWORD EmuXBFormatBitsPerPixel(X_D3DFORMAT Format);

// how many bytes does this format use per pixel?
extern DWORD EmuXBFormatBytesPerPixel(X_D3DFORMAT Format);

// is this format compressed?
extern BOOL EmuXBFormatIsCompressed(X_D3DFORMAT Format);

// is this format linear?
extern BOOL EmuXBFormatIsLinear(X_D3DFORMAT Format);

// is this format swizzled?
extern BOOL EmuXBFormatIsSwizzled(X_D3DFORMAT Format);

// is this format a valid render target?
extern BOOL EmuXBFormatIsRenderTarget(X_D3DFORMAT Format);

// is this format a valid depth buffer?
extern BOOL EmuXBFormatIsDepthBuffer(X_D3DFORMAT Format);

// convert from xbox to pc color formats
extern D3DFORMAT EmuXB2PC_D3DFormat(X_D3DFORMAT Format);

// convert from pc to xbox color formats
extern X_D3DFORMAT EmuPC2XB_D3DFormat(D3DFORMAT Format);

// convert from xbox to pc d3d lock flags
extern DWORD EmuXB2PC_D3DLock(DWORD Flags);

// convert from xbox to pc multisample formats
extern D3DMULTISAMPLE_TYPE EmuXB2PC_D3DMultiSampleFormat(DWORD Type);

/**
// convert from pc to xbox texture transform state types (unnecessary so far)
if((uint32)State < 4)
    State = (D3DTRANSFORMSTATETYPE)(State - 2);
else if((uint32)State < 20)
    State = (D3DTRANSFORMSTATETYPE)(State - 14);
else if((uint32)State > 255)
    State = (D3DTRANSFORMSTATETYPE)(State - 250);
else
    CxbxKrnlCleanup("Unknown Transform State Type (%d)", State);
//*/

// convert from xbox to pc texture transform state types
inline D3DTRANSFORMSTATETYPE EmuXB2PC_D3DTS(D3DTRANSFORMSTATETYPE State)
{
    if((uint32)State < 2)
        return (D3DTRANSFORMSTATETYPE)(State + 2);
    else if((uint32)State < 6)
        return (D3DTRANSFORMSTATETYPE)(State + 14);
    else if((uint32)State < 10)
        return D3DTS_WORLDMATRIX(State-6);
    else if((uint32)State == 10) // Max
        return (D3DTRANSFORMSTATETYPE)(D3DTS_TEXTURE7 + 1);

    CxbxKrnlCleanup("Unknown Transform State Type (%d)", State);

    return State;
}

// convert from xbox to pc blend ops
inline D3DBLENDOP EmuXB2PC_D3DBLENDOP(X_D3DBLENDOP Value)
{
    switch(Value)
    {
        case 0x8006:
            return D3DBLENDOP_ADD;
		case 0x800a:
			return D3DBLENDOP_SUBTRACT;
		case 0x800b:
			return D3DBLENDOP_REVSUBTRACT;
		case 0x8007:
			return D3DBLENDOP_MIN;
		case 0x8008:
			return D3DBLENDOP_MAX;
		case 0xF006:
			{
				EmuWarning("D3DBLENDOP_ADDSIGNED is not supported!");
				return D3DBLENDOP_ADD;
			};
		case 0xF005:
			{
				EmuWarning("D3DBLENDOP_REVSUBTRACTSIGNED is not supported!");
				return D3DBLENDOP_REVSUBTRACT;
			}
    }

    EmuWarning("Unknown D3DBLENDOP (0x%.08X)", Value);

    return (D3DBLENDOP)D3DBLENDOP_ADD;
}

// convert from xbox to pc blend types 
inline D3DBLEND EmuXB2PC_D3DBLEND(X_D3DBLEND Value)
{
    if(Value < 2)
        return (D3DBLEND)(Value + 1);
    else if(Value < 0x309)
        return (D3DBLEND)((Value & 0xF) + 3);

    EmuWarning("Unknown Xbox D3DBLEND Extension (0x%.08X)", Value);
	return D3DBLEND_ONE;
}

// convert from xbox to pc comparison functions
inline D3DCMPFUNC EmuXB2PC_D3DCMPFUNC(X_D3DCMPFUNC Value)
{
    return (D3DCMPFUNC)((Value & 0xF) + 1);
}

// convert from xbox to pc fill modes
inline D3DFILLMODE EmuXB2PC_D3DFILLMODE(X_D3DFILLMODE Value)
{
    return (D3DFILLMODE)((Value & 0xF) + 1);
}

// convert from xbox to pc shade modes
inline D3DSHADEMODE EmuXB2PC_D3DSHADEMODE(X_D3DSHADEMODE Value)
{
    return (D3DSHADEMODE)((Value & 0x3) + 1);
}

// convert from xbox to pc stencilop modes
inline D3DSTENCILOP EmuXB2PC_D3DSTENCILOP(X_D3DSTENCILOP Value)
{
	switch(Value)
	{
	case 0x1e00:
		return D3DSTENCILOP_KEEP;
	case 0:
		return D3DSTENCILOP_ZERO;
	case 0x1e01:
		return D3DSTENCILOP_REPLACE;
	case 0x1e02:
		return D3DSTENCILOP_INCRSAT;
	case 0x1e03:
		return D3DSTENCILOP_DECRSAT;
	case 0x150a:
		return D3DSTENCILOP_INVERT;
	case 0x8507:
		return D3DSTENCILOP_INCR;
	case 0x8508:
		return D3DSTENCILOP_DECR;

	default:
		CxbxKrnlCleanup("Unknown D3DSTENCILOP (0x%.08X)", Value);
	}

	return (D3DSTENCILOP) Value;
}

// table used for vertex->primitive count conversion
extern UINT EmuD3DVertexToPrimitive[X_D3DPT_POLYGON + 1][2];

inline bool EmuD3DValidVertexCount(X_D3DPRIMITIVETYPE XboxPrimitiveType, UINT VertexCount)
{
	// Are there more vertices than required for setup?
	if (VertexCount > EmuD3DVertexToPrimitive[XboxPrimitiveType][1])
		// Are the additional vertices exact multiples of the required additional vertices per primitive?
		if (0 == ((VertexCount - EmuD3DVertexToPrimitive[XboxPrimitiveType][1]) % EmuD3DVertexToPrimitive[XboxPrimitiveType][0]))
			return true;

	return false;
}

// convert from vertex count to primitive count (Xbox)
inline int EmuD3DVertex2PrimitiveCount(X_D3DPRIMITIVETYPE PrimitiveType, int VertexCount)
{
    return (VertexCount - EmuD3DVertexToPrimitive[PrimitiveType][1]) / EmuD3DVertexToPrimitive[PrimitiveType][0];
}

// convert from primitive count to vertex count (Xbox)
inline int EmuD3DPrimitive2VertexCount(X_D3DPRIMITIVETYPE PrimitiveType, int PrimitiveCount)
{
    return (PrimitiveCount * EmuD3DVertexToPrimitive[PrimitiveType][0]) + EmuD3DVertexToPrimitive[PrimitiveType][1];
}

// conversion table for xbox->pc primitive types
extern D3DPRIMITIVETYPE EmuPrimitiveTypeLookup[];

// convert xbox->pc primitive type
inline D3DPRIMITIVETYPE EmuXB2PC_D3DPrimitiveType(X_D3DPRIMITIVETYPE PrimitiveType)
{
    if((DWORD)PrimitiveType == 0x7FFFFFFF)
        return D3DPT_FORCE_DWORD;

    return EmuPrimitiveTypeLookup[PrimitiveType];
}

extern void EmuUnswizzleBox
(
	PVOID pSrcBuff,
	DWORD dwWidth,
	DWORD dwRowPitch,
	DWORD dwHeight,
	DWORD dwSlicePitch,
	DWORD dwDepth,
	PVOID pDstBuff,
	DWORD dwBPP // expressed in Bytes Per Pixel
); // NOPATCH

// From : https://www.virtualbox.org/svn/vbox/trunk/src/VBox/Additions/x11/x11include/libdrm-2.4.13/nouveau_class.h
// Cxbx notes (like Dxbx) :
// - Changed NV2A_ into NV2A_
// - Added specific NV2A constants
// TODO : Add more (especially when they conflict with NV20)

#define NV2A										0x00000097

#define  NV2A_NOP									0x00000100
#define  NV2A_NOTIFY									0x00000104
#define  NV2A_DMA_NOTIFY								0x00000180
#define  NV2A_DMA_TEXTURE0								0x00000184
#define  NV2A_DMA_TEXTURE1								0x00000188
#define  NV2A_DMA_COLOR								0x00000194
#define  NV2A_DMA_ZETA								0x00000198
#define  NV2A_DMA_VTXBUF0								0x0000019c
#define  NV2A_DMA_VTXBUF1								0x000001a0
#define  NV2A_DMA_FENCE								0x000001a4
#define  NV2A_DMA_QUERY								0x000001a8
#define  NV2A_RT_HORIZ								0x00000200
#define   NV2A_RT_HORIZ_X_SHIFT							0
#define   NV2A_RT_HORIZ_X_MASK							0x0000ffff
#define   NV2A_RT_HORIZ_W_SHIFT							16
#define   NV2A_RT_HORIZ_W_MASK							0xffff0000
#define  NV2A_RT_VERT								0x00000204
#define   NV2A_RT_VERT_Y_SHIFT							0
#define   NV2A_RT_VERT_Y_MASK							0x0000ffff
#define   NV2A_RT_VERT_H_SHIFT							16
#define   NV2A_RT_VERT_H_MASK							0xffff0000
#define  NV2A_RT_FORMAT								0x00000208
#define   NV2A_RT_FORMAT_TYPE_SHIFT							8
#define   NV2A_RT_FORMAT_TYPE_MASK							0x00000f00
#define    NV2A_RT_FORMAT_TYPE_LINEAR						0x00000100
#define    NV2A_RT_FORMAT_TYPE_SWIZZLED						0x00000200
#define   NV2A_RT_FORMAT_COLOR_SHIFT							0
#define   NV2A_RT_FORMAT_COLOR_MASK							0x0000001f
#define    NV2A_RT_FORMAT_COLOR_R5G6B5						0x00000003
#define    NV2A_RT_FORMAT_COLOR_X8R8G8B8						0x00000005
#define    NV2A_RT_FORMAT_COLOR_A8R8G8B8						0x00000008
#define    NV2A_RT_FORMAT_COLOR_B8							0x00000009
#define    NV2A_RT_FORMAT_COLOR_UNKNOWN						0x0000000d
#define    NV2A_RT_FORMAT_COLOR_X8B8G8R8						0x0000000f
#define    NV2A_RT_FORMAT_COLOR_A8B8G8R8						0x00000010
#define  NV2A_RT_PITCH								0x0000020c
#define   NV2A_RT_PITCH_COLOR_PITCH_SHIFT						0
#define   NV2A_RT_PITCH_COLOR_PITCH_MASK						0x0000ffff
#define   NV2A_RT_PITCH_ZETA_PITCH_SHIFT						16
#define   NV2A_RT_PITCH_ZETA_PITCH_MASK						0xffff0000
#define  NV2A_COLOR_OFFSET								0x00000210
#define  NV2A_ZETA_OFFSET								0x00000214
#define  NV2A_RC_IN_ALPHA(x)								(0x00000260+((x)*4))
#define  NV2A_RC_IN_ALPHA__SIZE							0x00000008
#define   NV2A_RC_IN_ALPHA_D_INPUT_SHIFT						0
#define   NV2A_RC_IN_ALPHA_D_INPUT_MASK						0x0000000f
#define    NV2A_RC_IN_ALPHA_D_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_ALPHA_D_INPUT_CONSTANT_COLOR0_NV				0x00000001
#define    NV2A_RC_IN_ALPHA_D_INPUT_CONSTANT_COLOR1_NV				0x00000002
#define    NV2A_RC_IN_ALPHA_D_INPUT_FOG						0x00000003
#define    NV2A_RC_IN_ALPHA_D_INPUT_PRIMARY_COLOR_NV					0x00000004
#define    NV2A_RC_IN_ALPHA_D_INPUT_SECONDARY_COLOR_NV				0x00000005
#define    NV2A_RC_IN_ALPHA_D_INPUT_TEXTURE0_ARB					0x00000008
#define    NV2A_RC_IN_ALPHA_D_INPUT_TEXTURE1_ARB					0x00000009
#define    NV2A_RC_IN_ALPHA_D_INPUT_SPARE0_NV					0x0000000c
#define    NV2A_RC_IN_ALPHA_D_INPUT_SPARE1_NV					0x0000000d
#define    NV2A_RC_IN_ALPHA_D_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0000000e
#define    NV2A_RC_IN_ALPHA_D_INPUT_E_TIMES_F_NV					0x0000000f
#define   NV2A_RC_IN_ALPHA_D_COMPONENT_USAGE						(1 <<  4)
#define    NV2A_RC_IN_ALPHA_D_COMPONENT_USAGE_BLUE					0x00000000
#define    NV2A_RC_IN_ALPHA_D_COMPONENT_USAGE_ALPHA					0x00000010
#define   NV2A_RC_IN_ALPHA_D_MAPPING_SHIFT						5
#define   NV2A_RC_IN_ALPHA_D_MAPPING_MASK						0x000000e0
#define    NV2A_RC_IN_ALPHA_D_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_ALPHA_D_MAPPING_UNSIGNED_INVERT_NV				0x00000020
#define    NV2A_RC_IN_ALPHA_D_MAPPING_EXPAND_NORMAL_NV				0x00000040
#define    NV2A_RC_IN_ALPHA_D_MAPPING_EXPAND_NEGATE_NV				0x00000060
#define    NV2A_RC_IN_ALPHA_D_MAPPING_HALF_BIAS_NORMAL_NV				0x00000080
#define    NV2A_RC_IN_ALPHA_D_MAPPING_HALF_BIAS_NEGATE_NV				0x000000a0
#define    NV2A_RC_IN_ALPHA_D_MAPPING_SIGNED_IDENTITY_NV				0x000000c0
#define    NV2A_RC_IN_ALPHA_D_MAPPING_SIGNED_NEGATE_NV				0x000000e0
#define   NV2A_RC_IN_ALPHA_C_INPUT_SHIFT						8
#define   NV2A_RC_IN_ALPHA_C_INPUT_MASK						0x00000f00
#define    NV2A_RC_IN_ALPHA_C_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_ALPHA_C_INPUT_CONSTANT_COLOR0_NV				0x00000100
#define    NV2A_RC_IN_ALPHA_C_INPUT_CONSTANT_COLOR1_NV				0x00000200
#define    NV2A_RC_IN_ALPHA_C_INPUT_FOG						0x00000300
#define    NV2A_RC_IN_ALPHA_C_INPUT_PRIMARY_COLOR_NV					0x00000400
#define    NV2A_RC_IN_ALPHA_C_INPUT_SECONDARY_COLOR_NV				0x00000500
#define    NV2A_RC_IN_ALPHA_C_INPUT_TEXTURE0_ARB					0x00000800
#define    NV2A_RC_IN_ALPHA_C_INPUT_TEXTURE1_ARB					0x00000900
#define    NV2A_RC_IN_ALPHA_C_INPUT_SPARE0_NV					0x00000c00
#define    NV2A_RC_IN_ALPHA_C_INPUT_SPARE1_NV					0x00000d00
#define    NV2A_RC_IN_ALPHA_C_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x00000e00
#define    NV2A_RC_IN_ALPHA_C_INPUT_E_TIMES_F_NV					0x00000f00
#define   NV2A_RC_IN_ALPHA_C_COMPONENT_USAGE						(1 << 12)
#define    NV2A_RC_IN_ALPHA_C_COMPONENT_USAGE_BLUE					0x00000000
#define    NV2A_RC_IN_ALPHA_C_COMPONENT_USAGE_ALPHA					0x00001000
#define   NV2A_RC_IN_ALPHA_C_MAPPING_SHIFT						13
#define   NV2A_RC_IN_ALPHA_C_MAPPING_MASK						0x0000e000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_UNSIGNED_INVERT_NV				0x00002000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_EXPAND_NORMAL_NV				0x00004000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_EXPAND_NEGATE_NV				0x00006000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_HALF_BIAS_NORMAL_NV				0x00008000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_HALF_BIAS_NEGATE_NV				0x0000a000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_SIGNED_IDENTITY_NV				0x0000c000
#define    NV2A_RC_IN_ALPHA_C_MAPPING_SIGNED_NEGATE_NV				0x0000e000
#define   NV2A_RC_IN_ALPHA_B_INPUT_SHIFT						16
#define   NV2A_RC_IN_ALPHA_B_INPUT_MASK						0x000f0000
#define    NV2A_RC_IN_ALPHA_B_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_ALPHA_B_INPUT_CONSTANT_COLOR0_NV				0x00010000
#define    NV2A_RC_IN_ALPHA_B_INPUT_CONSTANT_COLOR1_NV				0x00020000
#define    NV2A_RC_IN_ALPHA_B_INPUT_FOG						0x00030000
#define    NV2A_RC_IN_ALPHA_B_INPUT_PRIMARY_COLOR_NV					0x00040000
#define    NV2A_RC_IN_ALPHA_B_INPUT_SECONDARY_COLOR_NV				0x00050000
#define    NV2A_RC_IN_ALPHA_B_INPUT_TEXTURE0_ARB					0x00080000
#define    NV2A_RC_IN_ALPHA_B_INPUT_TEXTURE1_ARB					0x00090000
#define    NV2A_RC_IN_ALPHA_B_INPUT_SPARE0_NV					0x000c0000
#define    NV2A_RC_IN_ALPHA_B_INPUT_SPARE1_NV					0x000d0000
#define    NV2A_RC_IN_ALPHA_B_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x000e0000
#define    NV2A_RC_IN_ALPHA_B_INPUT_E_TIMES_F_NV					0x000f0000
#define   NV2A_RC_IN_ALPHA_B_COMPONENT_USAGE						(1 << 20)
#define    NV2A_RC_IN_ALPHA_B_COMPONENT_USAGE_BLUE					0x00000000
#define    NV2A_RC_IN_ALPHA_B_COMPONENT_USAGE_ALPHA					0x00100000
#define   NV2A_RC_IN_ALPHA_B_MAPPING_SHIFT						21
#define   NV2A_RC_IN_ALPHA_B_MAPPING_MASK						0x00e00000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_UNSIGNED_INVERT_NV				0x00200000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_EXPAND_NORMAL_NV				0x00400000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_EXPAND_NEGATE_NV				0x00600000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_HALF_BIAS_NORMAL_NV				0x00800000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_HALF_BIAS_NEGATE_NV				0x00a00000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_SIGNED_IDENTITY_NV				0x00c00000
#define    NV2A_RC_IN_ALPHA_B_MAPPING_SIGNED_NEGATE_NV				0x00e00000
#define   NV2A_RC_IN_ALPHA_A_INPUT_SHIFT						24
#define   NV2A_RC_IN_ALPHA_A_INPUT_MASK						0x0f000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_CONSTANT_COLOR0_NV				0x01000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_CONSTANT_COLOR1_NV				0x02000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_FOG						0x03000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_PRIMARY_COLOR_NV					0x04000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_SECONDARY_COLOR_NV				0x05000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_TEXTURE0_ARB					0x08000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_TEXTURE1_ARB					0x09000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_SPARE0_NV					0x0c000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_SPARE1_NV					0x0d000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0e000000
#define    NV2A_RC_IN_ALPHA_A_INPUT_E_TIMES_F_NV					0x0f000000
#define   NV2A_RC_IN_ALPHA_A_COMPONENT_USAGE						(1 << 28)
#define    NV2A_RC_IN_ALPHA_A_COMPONENT_USAGE_BLUE					0x00000000
#define    NV2A_RC_IN_ALPHA_A_COMPONENT_USAGE_ALPHA					0x10000000
#define   NV2A_RC_IN_ALPHA_A_MAPPING_SHIFT						29
#define   NV2A_RC_IN_ALPHA_A_MAPPING_MASK						0xe0000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_UNSIGNED_INVERT_NV				0x20000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_EXPAND_NORMAL_NV				0x40000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_EXPAND_NEGATE_NV				0x60000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_HALF_BIAS_NORMAL_NV				0x80000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_HALF_BIAS_NEGATE_NV				0xa0000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_SIGNED_IDENTITY_NV				0xc0000000
#define    NV2A_RC_IN_ALPHA_A_MAPPING_SIGNED_NEGATE_NV				0xe0000000
#define  NV2A_RC_FINAL0								0x00000288
#define   NV2A_RC_FINAL0_D_INPUT_SHIFT						0
#define   NV2A_RC_FINAL0_D_INPUT_MASK						0x0000000f
#define    NV2A_RC_FINAL0_D_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL0_D_INPUT_CONSTANT_COLOR0_NV					0x00000001
#define    NV2A_RC_FINAL0_D_INPUT_CONSTANT_COLOR1_NV					0x00000002
#define    NV2A_RC_FINAL0_D_INPUT_FOG						0x00000003
#define    NV2A_RC_FINAL0_D_INPUT_PRIMARY_COLOR_NV					0x00000004
#define    NV2A_RC_FINAL0_D_INPUT_SECONDARY_COLOR_NV					0x00000005
#define    NV2A_RC_FINAL0_D_INPUT_TEXTURE0_ARB					0x00000008
#define    NV2A_RC_FINAL0_D_INPUT_TEXTURE1_ARB					0x00000009
#define    NV2A_RC_FINAL0_D_INPUT_SPARE0_NV						0x0000000c
#define    NV2A_RC_FINAL0_D_INPUT_SPARE1_NV						0x0000000d
#define    NV2A_RC_FINAL0_D_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0000000e
#define    NV2A_RC_FINAL0_D_INPUT_E_TIMES_F_NV					0x0000000f
#define   NV2A_RC_FINAL0_D_COMPONENT_USAGE						(1 <<  4)
#define    NV2A_RC_FINAL0_D_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL0_D_COMPONENT_USAGE_ALPHA					0x00000010
#define   NV2A_RC_FINAL0_D_MAPPING_SHIFT						5
#define   NV2A_RC_FINAL0_D_MAPPING_MASK						0x000000e0
#define    NV2A_RC_FINAL0_D_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL0_D_MAPPING_UNSIGNED_INVERT_NV				0x00000020
#define    NV2A_RC_FINAL0_D_MAPPING_EXPAND_NORMAL_NV					0x00000040
#define    NV2A_RC_FINAL0_D_MAPPING_EXPAND_NEGATE_NV					0x00000060
#define    NV2A_RC_FINAL0_D_MAPPING_HALF_BIAS_NORMAL_NV				0x00000080
#define    NV2A_RC_FINAL0_D_MAPPING_HALF_BIAS_NEGATE_NV				0x000000a0
#define    NV2A_RC_FINAL0_D_MAPPING_SIGNED_IDENTITY_NV				0x000000c0
#define    NV2A_RC_FINAL0_D_MAPPING_SIGNED_NEGATE_NV					0x000000e0
#define   NV2A_RC_FINAL0_C_INPUT_SHIFT						8
#define   NV2A_RC_FINAL0_C_INPUT_MASK						0x00000f00
#define    NV2A_RC_FINAL0_C_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL0_C_INPUT_CONSTANT_COLOR0_NV					0x00000100
#define    NV2A_RC_FINAL0_C_INPUT_CONSTANT_COLOR1_NV					0x00000200
#define    NV2A_RC_FINAL0_C_INPUT_FOG						0x00000300
#define    NV2A_RC_FINAL0_C_INPUT_PRIMARY_COLOR_NV					0x00000400
#define    NV2A_RC_FINAL0_C_INPUT_SECONDARY_COLOR_NV					0x00000500
#define    NV2A_RC_FINAL0_C_INPUT_TEXTURE0_ARB					0x00000800
#define    NV2A_RC_FINAL0_C_INPUT_TEXTURE1_ARB					0x00000900
#define    NV2A_RC_FINAL0_C_INPUT_SPARE0_NV						0x00000c00
#define    NV2A_RC_FINAL0_C_INPUT_SPARE1_NV						0x00000d00
#define    NV2A_RC_FINAL0_C_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x00000e00
#define    NV2A_RC_FINAL0_C_INPUT_E_TIMES_F_NV					0x00000f00
#define   NV2A_RC_FINAL0_C_COMPONENT_USAGE						(1 << 12)
#define    NV2A_RC_FINAL0_C_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL0_C_COMPONENT_USAGE_ALPHA					0x00001000
#define   NV2A_RC_FINAL0_C_MAPPING_SHIFT						13
#define   NV2A_RC_FINAL0_C_MAPPING_MASK						0x0000e000
#define    NV2A_RC_FINAL0_C_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL0_C_MAPPING_UNSIGNED_INVERT_NV				0x00002000
#define    NV2A_RC_FINAL0_C_MAPPING_EXPAND_NORMAL_NV					0x00004000
#define    NV2A_RC_FINAL0_C_MAPPING_EXPAND_NEGATE_NV					0x00006000
#define    NV2A_RC_FINAL0_C_MAPPING_HALF_BIAS_NORMAL_NV				0x00008000
#define    NV2A_RC_FINAL0_C_MAPPING_HALF_BIAS_NEGATE_NV				0x0000a000
#define    NV2A_RC_FINAL0_C_MAPPING_SIGNED_IDENTITY_NV				0x0000c000
#define    NV2A_RC_FINAL0_C_MAPPING_SIGNED_NEGATE_NV					0x0000e000
#define   NV2A_RC_FINAL0_B_INPUT_SHIFT						16
#define   NV2A_RC_FINAL0_B_INPUT_MASK						0x000f0000
#define    NV2A_RC_FINAL0_B_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL0_B_INPUT_CONSTANT_COLOR0_NV					0x00010000
#define    NV2A_RC_FINAL0_B_INPUT_CONSTANT_COLOR1_NV					0x00020000
#define    NV2A_RC_FINAL0_B_INPUT_FOG						0x00030000
#define    NV2A_RC_FINAL0_B_INPUT_PRIMARY_COLOR_NV					0x00040000
#define    NV2A_RC_FINAL0_B_INPUT_SECONDARY_COLOR_NV					0x00050000
#define    NV2A_RC_FINAL0_B_INPUT_TEXTURE0_ARB					0x00080000
#define    NV2A_RC_FINAL0_B_INPUT_TEXTURE1_ARB					0x00090000
#define    NV2A_RC_FINAL0_B_INPUT_SPARE0_NV						0x000c0000
#define    NV2A_RC_FINAL0_B_INPUT_SPARE1_NV						0x000d0000
#define    NV2A_RC_FINAL0_B_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x000e0000
#define    NV2A_RC_FINAL0_B_INPUT_E_TIMES_F_NV					0x000f0000
#define   NV2A_RC_FINAL0_B_COMPONENT_USAGE						(1 << 20)
#define    NV2A_RC_FINAL0_B_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL0_B_COMPONENT_USAGE_ALPHA					0x00100000
#define   NV2A_RC_FINAL0_B_MAPPING_SHIFT						21
#define   NV2A_RC_FINAL0_B_MAPPING_MASK						0x00e00000
#define    NV2A_RC_FINAL0_B_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL0_B_MAPPING_UNSIGNED_INVERT_NV				0x00200000
#define    NV2A_RC_FINAL0_B_MAPPING_EXPAND_NORMAL_NV					0x00400000
#define    NV2A_RC_FINAL0_B_MAPPING_EXPAND_NEGATE_NV					0x00600000
#define    NV2A_RC_FINAL0_B_MAPPING_HALF_BIAS_NORMAL_NV				0x00800000
#define    NV2A_RC_FINAL0_B_MAPPING_HALF_BIAS_NEGATE_NV				0x00a00000
#define    NV2A_RC_FINAL0_B_MAPPING_SIGNED_IDENTITY_NV				0x00c00000
#define    NV2A_RC_FINAL0_B_MAPPING_SIGNED_NEGATE_NV					0x00e00000
#define   NV2A_RC_FINAL0_A_INPUT_SHIFT						24
#define   NV2A_RC_FINAL0_A_INPUT_MASK						0x0f000000
#define    NV2A_RC_FINAL0_A_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL0_A_INPUT_CONSTANT_COLOR0_NV					0x01000000
#define    NV2A_RC_FINAL0_A_INPUT_CONSTANT_COLOR1_NV					0x02000000
#define    NV2A_RC_FINAL0_A_INPUT_FOG						0x03000000
#define    NV2A_RC_FINAL0_A_INPUT_PRIMARY_COLOR_NV					0x04000000
#define    NV2A_RC_FINAL0_A_INPUT_SECONDARY_COLOR_NV					0x05000000
#define    NV2A_RC_FINAL0_A_INPUT_TEXTURE0_ARB					0x08000000
#define    NV2A_RC_FINAL0_A_INPUT_TEXTURE1_ARB					0x09000000
#define    NV2A_RC_FINAL0_A_INPUT_SPARE0_NV						0x0c000000
#define    NV2A_RC_FINAL0_A_INPUT_SPARE1_NV						0x0d000000
#define    NV2A_RC_FINAL0_A_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0e000000
#define    NV2A_RC_FINAL0_A_INPUT_E_TIMES_F_NV					0x0f000000
#define   NV2A_RC_FINAL0_A_COMPONENT_USAGE						(1 << 28)
#define    NV2A_RC_FINAL0_A_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL0_A_COMPONENT_USAGE_ALPHA					0x10000000
#define   NV2A_RC_FINAL0_A_MAPPING_SHIFT						29
#define   NV2A_RC_FINAL0_A_MAPPING_MASK						0xe0000000
#define    NV2A_RC_FINAL0_A_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL0_A_MAPPING_UNSIGNED_INVERT_NV				0x20000000
#define    NV2A_RC_FINAL0_A_MAPPING_EXPAND_NORMAL_NV					0x40000000
#define    NV2A_RC_FINAL0_A_MAPPING_EXPAND_NEGATE_NV					0x60000000
#define    NV2A_RC_FINAL0_A_MAPPING_HALF_BIAS_NORMAL_NV				0x80000000
#define    NV2A_RC_FINAL0_A_MAPPING_HALF_BIAS_NEGATE_NV				0xa0000000
#define    NV2A_RC_FINAL0_A_MAPPING_SIGNED_IDENTITY_NV				0xc0000000
#define    NV2A_RC_FINAL0_A_MAPPING_SIGNED_NEGATE_NV					0xe0000000
#define  NV2A_RC_FINAL1								0x0000028c
#define   NV2A_RC_FINAL1_COLOR_SUM_CLAMP						(1 <<  7)
#define   NV2A_RC_FINAL1_G_INPUT_SHIFT						8
#define   NV2A_RC_FINAL1_G_INPUT_MASK						0x00000f00
#define    NV2A_RC_FINAL1_G_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL1_G_INPUT_CONSTANT_COLOR0_NV					0x00000100
#define    NV2A_RC_FINAL1_G_INPUT_CONSTANT_COLOR1_NV					0x00000200
#define    NV2A_RC_FINAL1_G_INPUT_FOG						0x00000300
#define    NV2A_RC_FINAL1_G_INPUT_PRIMARY_COLOR_NV					0x00000400
#define    NV2A_RC_FINAL1_G_INPUT_SECONDARY_COLOR_NV					0x00000500
#define    NV2A_RC_FINAL1_G_INPUT_TEXTURE0_ARB					0x00000800
#define    NV2A_RC_FINAL1_G_INPUT_TEXTURE1_ARB					0x00000900
#define    NV2A_RC_FINAL1_G_INPUT_SPARE0_NV						0x00000c00
#define    NV2A_RC_FINAL1_G_INPUT_SPARE1_NV						0x00000d00
#define    NV2A_RC_FINAL1_G_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x00000e00
#define    NV2A_RC_FINAL1_G_INPUT_E_TIMES_F_NV					0x00000f00
#define   NV2A_RC_FINAL1_G_COMPONENT_USAGE						(1 << 12)
#define    NV2A_RC_FINAL1_G_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL1_G_COMPONENT_USAGE_ALPHA					0x00001000
#define   NV2A_RC_FINAL1_G_MAPPING_SHIFT						13
#define   NV2A_RC_FINAL1_G_MAPPING_MASK						0x0000e000
#define    NV2A_RC_FINAL1_G_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL1_G_MAPPING_UNSIGNED_INVERT_NV				0x00002000
#define    NV2A_RC_FINAL1_G_MAPPING_EXPAND_NORMAL_NV					0x00004000
#define    NV2A_RC_FINAL1_G_MAPPING_EXPAND_NEGATE_NV					0x00006000
#define    NV2A_RC_FINAL1_G_MAPPING_HALF_BIAS_NORMAL_NV				0x00008000
#define    NV2A_RC_FINAL1_G_MAPPING_HALF_BIAS_NEGATE_NV				0x0000a000
#define    NV2A_RC_FINAL1_G_MAPPING_SIGNED_IDENTITY_NV				0x0000c000
#define    NV2A_RC_FINAL1_G_MAPPING_SIGNED_NEGATE_NV					0x0000e000
#define   NV2A_RC_FINAL1_F_INPUT_SHIFT						16
#define   NV2A_RC_FINAL1_F_INPUT_MASK						0x000f0000
#define    NV2A_RC_FINAL1_F_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL1_F_INPUT_CONSTANT_COLOR0_NV					0x00010000
#define    NV2A_RC_FINAL1_F_INPUT_CONSTANT_COLOR1_NV					0x00020000
#define    NV2A_RC_FINAL1_F_INPUT_FOG						0x00030000
#define    NV2A_RC_FINAL1_F_INPUT_PRIMARY_COLOR_NV					0x00040000
#define    NV2A_RC_FINAL1_F_INPUT_SECONDARY_COLOR_NV					0x00050000
#define    NV2A_RC_FINAL1_F_INPUT_TEXTURE0_ARB					0x00080000
#define    NV2A_RC_FINAL1_F_INPUT_TEXTURE1_ARB					0x00090000
#define    NV2A_RC_FINAL1_F_INPUT_SPARE0_NV						0x000c0000
#define    NV2A_RC_FINAL1_F_INPUT_SPARE1_NV						0x000d0000
#define    NV2A_RC_FINAL1_F_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x000e0000
#define    NV2A_RC_FINAL1_F_INPUT_E_TIMES_F_NV					0x000f0000
#define   NV2A_RC_FINAL1_F_COMPONENT_USAGE						(1 << 20)
#define    NV2A_RC_FINAL1_F_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL1_F_COMPONENT_USAGE_ALPHA					0x00100000
#define   NV2A_RC_FINAL1_F_MAPPING_SHIFT						21
#define   NV2A_RC_FINAL1_F_MAPPING_MASK						0x00e00000
#define    NV2A_RC_FINAL1_F_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL1_F_MAPPING_UNSIGNED_INVERT_NV				0x00200000
#define    NV2A_RC_FINAL1_F_MAPPING_EXPAND_NORMAL_NV					0x00400000
#define    NV2A_RC_FINAL1_F_MAPPING_EXPAND_NEGATE_NV					0x00600000
#define    NV2A_RC_FINAL1_F_MAPPING_HALF_BIAS_NORMAL_NV				0x00800000
#define    NV2A_RC_FINAL1_F_MAPPING_HALF_BIAS_NEGATE_NV				0x00a00000
#define    NV2A_RC_FINAL1_F_MAPPING_SIGNED_IDENTITY_NV				0x00c00000
#define    NV2A_RC_FINAL1_F_MAPPING_SIGNED_NEGATE_NV					0x00e00000
#define   NV2A_RC_FINAL1_E_INPUT_SHIFT						24
#define   NV2A_RC_FINAL1_E_INPUT_MASK						0x0f000000
#define    NV2A_RC_FINAL1_E_INPUT_ZERO						0x00000000
#define    NV2A_RC_FINAL1_E_INPUT_CONSTANT_COLOR0_NV					0x01000000
#define    NV2A_RC_FINAL1_E_INPUT_CONSTANT_COLOR1_NV					0x02000000
#define    NV2A_RC_FINAL1_E_INPUT_FOG						0x03000000
#define    NV2A_RC_FINAL1_E_INPUT_PRIMARY_COLOR_NV					0x04000000
#define    NV2A_RC_FINAL1_E_INPUT_SECONDARY_COLOR_NV					0x05000000
#define    NV2A_RC_FINAL1_E_INPUT_TEXTURE0_ARB					0x08000000
#define    NV2A_RC_FINAL1_E_INPUT_TEXTURE1_ARB					0x09000000
#define    NV2A_RC_FINAL1_E_INPUT_SPARE0_NV						0x0c000000
#define    NV2A_RC_FINAL1_E_INPUT_SPARE1_NV						0x0d000000
#define    NV2A_RC_FINAL1_E_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0e000000
#define    NV2A_RC_FINAL1_E_INPUT_E_TIMES_F_NV					0x0f000000
#define   NV2A_RC_FINAL1_E_COMPONENT_USAGE						(1 << 28)
#define    NV2A_RC_FINAL1_E_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_FINAL1_E_COMPONENT_USAGE_ALPHA					0x10000000
#define   NV2A_RC_FINAL1_E_MAPPING_SHIFT						29
#define   NV2A_RC_FINAL1_E_MAPPING_MASK						0xe0000000
#define    NV2A_RC_FINAL1_E_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_FINAL1_E_MAPPING_UNSIGNED_INVERT_NV				0x20000000
#define    NV2A_RC_FINAL1_E_MAPPING_EXPAND_NORMAL_NV					0x40000000
#define    NV2A_RC_FINAL1_E_MAPPING_EXPAND_NEGATE_NV					0x60000000
#define    NV2A_RC_FINAL1_E_MAPPING_HALF_BIAS_NORMAL_NV				0x80000000
#define    NV2A_RC_FINAL1_E_MAPPING_HALF_BIAS_NEGATE_NV				0xa0000000
#define    NV2A_RC_FINAL1_E_MAPPING_SIGNED_IDENTITY_NV				0xc0000000
#define    NV2A_RC_FINAL1_E_MAPPING_SIGNED_NEGATE_NV					0xe0000000
#define  NV2A_CONTROL0                                  0x00000290 // Dxbx
#define  NV2A_LIGHT_MODEL								0x00000294 // Dxbx, Was NV2A_LIGHT_CONTROL
#define  NV2A_COLOR_MATERIAL                            0x00000298 // Dxbx
#define  NV2A_FOG_MODE								0x0000029c
#define   NV2A_FOG_MODE_EXP								0x00000800
#define   NV2A_FOG_MODE_EXP_2							0x00000802
#define   NV2A_FOG_MODE_EXP2								0x00000803
#define   NV2A_FOG_MODE_LINEAR							0x00000804
#define   NV2A_FOG_MODE_LINEAR_2							0x00002601
#define  NV2A_FOG_COORD_DIST								0x000002a0
#define   NV2A_FOG_COORD_DIST_COORD_FALSE						0x00000000
#define   NV2A_FOG_COORD_DIST_COORD_FRAGMENT_DEPTH_DISTANCE_EYE_RADIAL_NV		0x00000001
#define   NV2A_FOG_COORD_DIST_COORD_FRAGMENT_DEPTH_DISTANCE_EYE_PLANE_ABSOLUTE_NV	0x00000002
#define   NV2A_FOG_COORD_DIST_COORD_FOG						0x00000003
#define  NV2A_FOG_ENABLE								0x000002a4
#define  NV2A_FOG_COLOR								0x000002a8
#define   NV2A_FOG_COLOR_R_SHIFT							0
#define   NV2A_FOG_COLOR_R_MASK							0x000000ff
#define   NV2A_FOG_COLOR_G_SHIFT							8
#define   NV2A_FOG_COLOR_G_MASK							0x0000ff00
#define   NV2A_FOG_COLOR_B_SHIFT							16
#define   NV2A_FOG_COLOR_B_MASK							0x00ff0000
#define   NV2A_FOG_COLOR_A_SHIFT							24
#define   NV2A_FOG_COLOR_A_MASK							0xff000000
#define  NV2A_VIEWPORT_CLIP_MODE							0x000002b4
#define  NV2A_VIEWPORT_CLIP_HORIZ(x)							(0x000002c0+((x)*4))
#define  NV2A_VIEWPORT_CLIP_HORIZ__SIZE						0x00000008
#define  NV2A_VIEWPORT_CLIP_VERT(x)							(0x000002e0+((x)*4))
#define  NV2A_VIEWPORT_CLIP_VERT__SIZE						0x00000008
#define  NV2A_ALPHA_FUNC_ENABLE							0x00000300
#define  NV2A_BLEND_FUNC_ENABLE							0x00000304
#define  NV2A_CULL_FACE_ENABLE							0x00000308
#define  NV2A_DEPTH_TEST_ENABLE							0x0000030c
#define  NV2A_DITHER_ENABLE								0x00000310
#define  NV2A_LIGHTING_ENABLE							0x00000314
#define  NV2A_POINT_PARAMETERS_ENABLE						0x00000318
#define  NV2A_POINT_SMOOTH_ENABLE							0x0000031c
#define  NV2A_LINE_SMOOTH_ENABLE							0x00000320
#define  NV2A_POLYGON_SMOOTH_ENABLE							0x00000324
#define  NV2A_SKIN_MODE                                     0x00000328 // Dxbx
#define  NV2A_STENCIL_ENABLE								0x0000032c
#define  NV2A_POLYGON_OFFSET_POINT_ENABLE						0x00000330
#define  NV2A_POLYGON_OFFSET_LINE_ENABLE						0x00000334
#define  NV2A_POLYGON_OFFSET_FILL_ENABLE						0x00000338
#define  NV2A_ALPHA_FUNC_FUNC							0x0000033c
#define   NV2A_ALPHA_FUNC_FUNC_NEVER							0x00000200
#define   NV2A_ALPHA_FUNC_FUNC_LESS							0x00000201
#define   NV2A_ALPHA_FUNC_FUNC_EQUAL							0x00000202
#define   NV2A_ALPHA_FUNC_FUNC_LEQUAL						0x00000203
#define   NV2A_ALPHA_FUNC_FUNC_GREATER						0x00000204
#define   NV2A_ALPHA_FUNC_FUNC_GREATER						0x00000204
#define   NV2A_ALPHA_FUNC_FUNC_NOTEQUAL						0x00000205
#define   NV2A_ALPHA_FUNC_FUNC_GEQUAL						0x00000206
#define   NV2A_ALPHA_FUNC_FUNC_ALWAYS						0x00000207
#define  NV2A_ALPHA_FUNC_REF								0x00000340
#define  NV2A_BLEND_FUNC_SRC								0x00000344
#define   NV2A_BLEND_FUNC_SRC_ZERO							0x00000000
#define   NV2A_BLEND_FUNC_SRC_ONE							0x00000001
#define   NV2A_BLEND_FUNC_SRC_SRC_COLOR						0x00000300
#define   NV2A_BLEND_FUNC_SRC_ONE_MINUS_SRC_COLOR					0x00000301
#define   NV2A_BLEND_FUNC_SRC_SRC_ALPHA						0x00000302
#define   NV2A_BLEND_FUNC_SRC_ONE_MINUS_SRC_ALPHA					0x00000303
#define   NV2A_BLEND_FUNC_SRC_DST_ALPHA						0x00000304
#define   NV2A_BLEND_FUNC_SRC_ONE_MINUS_DST_ALPHA					0x00000305
#define   NV2A_BLEND_FUNC_SRC_DST_COLOR						0x00000306
#define   NV2A_BLEND_FUNC_SRC_ONE_MINUS_DST_COLOR					0x00000307
#define   NV2A_BLEND_FUNC_SRC_SRC_ALPHA_SATURATE					0x00000308
#define   NV2A_BLEND_FUNC_SRC_CONSTANT_COLOR						0x00008001
#define   NV2A_BLEND_FUNC_SRC_ONE_MINUS_CONSTANT_COLOR				0x00008002
#define   NV2A_BLEND_FUNC_SRC_CONSTANT_ALPHA						0x00008003
#define   NV2A_BLEND_FUNC_SRC_ONE_MINUS_CONSTANT_ALPHA				0x00008004
#define  NV2A_BLEND_FUNC_DST								0x00000348
#define   NV2A_BLEND_FUNC_DST_ZERO							0x00000000
#define   NV2A_BLEND_FUNC_DST_ONE							0x00000001
#define   NV2A_BLEND_FUNC_DST_SRC_COLOR						0x00000300
#define   NV2A_BLEND_FUNC_DST_ONE_MINUS_SRC_COLOR					0x00000301
#define   NV2A_BLEND_FUNC_DST_SRC_ALPHA						0x00000302
#define   NV2A_BLEND_FUNC_DST_ONE_MINUS_SRC_ALPHA					0x00000303
#define   NV2A_BLEND_FUNC_DST_DST_ALPHA						0x00000304
#define   NV2A_BLEND_FUNC_DST_ONE_MINUS_DST_ALPHA					0x00000305
#define   NV2A_BLEND_FUNC_DST_DST_COLOR						0x00000306
#define   NV2A_BLEND_FUNC_DST_ONE_MINUS_DST_COLOR					0x00000307
#define   NV2A_BLEND_FUNC_DST_SRC_ALPHA_SATURATE					0x00000308
#define   NV2A_BLEND_FUNC_DST_CONSTANT_COLOR						0x00008001
#define   NV2A_BLEND_FUNC_DST_ONE_MINUS_CONSTANT_COLOR				0x00008002
#define   NV2A_BLEND_FUNC_DST_CONSTANT_ALPHA						0x00008003
#define   NV2A_BLEND_FUNC_DST_ONE_MINUS_CONSTANT_ALPHA				0x00008004
#define  NV2A_BLEND_COLOR								0x0000034c
#define   NV2A_BLEND_COLOR_B_SHIFT							0
#define   NV2A_BLEND_COLOR_B_MASK							0x000000ff
#define   NV2A_BLEND_COLOR_G_SHIFT							8
#define   NV2A_BLEND_COLOR_G_MASK							0x0000ff00
#define   NV2A_BLEND_COLOR_R_SHIFT							16
#define   NV2A_BLEND_COLOR_R_MASK							0x00ff0000
#define   NV2A_BLEND_COLOR_A_SHIFT							24
#define   NV2A_BLEND_COLOR_A_MASK							0xff000000
#define  NV2A_BLEND_EQUATION								0x00000350
#define   NV2A_BLEND_EQUATION_FUNC_ADD						0x00008006
#define   NV2A_BLEND_EQUATION_MIN							0x00008007
#define   NV2A_BLEND_EQUATION_MAX							0x00008008
#define   NV2A_BLEND_EQUATION_FUNC_SUBTRACT						0x0000800a
#define   NV2A_BLEND_EQUATION_FUNC_REVERSE_SUBTRACT					0x0000800b
#define  NV2A_DEPTH_FUNC								0x00000354
#define   NV2A_DEPTH_FUNC_NEVER							0x00000200
#define   NV2A_DEPTH_FUNC_LESS							0x00000201
#define   NV2A_DEPTH_FUNC_EQUAL							0x00000202
#define   NV2A_DEPTH_FUNC_LEQUAL							0x00000203
#define   NV2A_DEPTH_FUNC_GREATER							0x00000204
#define   NV2A_DEPTH_FUNC_GREATER							0x00000204
#define   NV2A_DEPTH_FUNC_NOTEQUAL							0x00000205
#define   NV2A_DEPTH_FUNC_GEQUAL							0x00000206
#define   NV2A_DEPTH_FUNC_ALWAYS							0x00000207
#define  NV2A_COLOR_MASK								0x00000358
#define   NV2A_COLOR_MASK_B								(1 <<  0)
#define   NV2A_COLOR_MASK_G								(1 <<  8)
#define   NV2A_COLOR_MASK_R								(1 << 16)
#define   NV2A_COLOR_MASK_A								(1 << 24)
#define  NV2A_DEPTH_WRITE_ENABLE							0x0000035c
#define  NV2A_STENCIL_MASK								0x00000360
#define  NV2A_STENCIL_FUNC_FUNC							0x00000364
#define   NV2A_STENCIL_FUNC_FUNC_NEVER						0x00000200
#define   NV2A_STENCIL_FUNC_FUNC_LESS						0x00000201
#define   NV2A_STENCIL_FUNC_FUNC_EQUAL						0x00000202
#define   NV2A_STENCIL_FUNC_FUNC_LEQUAL						0x00000203
#define   NV2A_STENCIL_FUNC_FUNC_GREATER						0x00000204
#define   NV2A_STENCIL_FUNC_FUNC_GREATER						0x00000204
#define   NV2A_STENCIL_FUNC_FUNC_NOTEQUAL						0x00000205
#define   NV2A_STENCIL_FUNC_FUNC_GEQUAL						0x00000206
#define   NV2A_STENCIL_FUNC_FUNC_ALWAYS						0x00000207
#define  NV2A_STENCIL_FUNC_REF							0x00000368
#define  NV2A_STENCIL_FUNC_MASK							0x0000036c
#define  NV2A_STENCIL_OP_FAIL							0x00000370
#define   NV2A_STENCIL_OP_FAIL_ZERO							0x00000000
#define   NV2A_STENCIL_OP_FAIL_INVERT						0x0000150a
#define   NV2A_STENCIL_OP_FAIL_KEEP							0x00001e00
#define   NV2A_STENCIL_OP_FAIL_REPLACE						0x00001e01
#define   NV2A_STENCIL_OP_FAIL_INCR							0x00001e02
#define   NV2A_STENCIL_OP_FAIL_DECR							0x00001e03
#define   NV2A_STENCIL_OP_FAIL_INCR_WRAP						0x00008507
#define   NV2A_STENCIL_OP_FAIL_DECR_WRAP						0x00008508
#define  NV2A_STENCIL_OP_ZFAIL							0x00000374
#define   NV2A_STENCIL_OP_ZFAIL_ZERO							0x00000000
#define   NV2A_STENCIL_OP_ZFAIL_INVERT						0x0000150a
#define   NV2A_STENCIL_OP_ZFAIL_KEEP							0x00001e00
#define   NV2A_STENCIL_OP_ZFAIL_REPLACE						0x00001e01
#define   NV2A_STENCIL_OP_ZFAIL_INCR							0x00001e02
#define   NV2A_STENCIL_OP_ZFAIL_DECR							0x00001e03
#define   NV2A_STENCIL_OP_ZFAIL_INCR_WRAP						0x00008507
#define   NV2A_STENCIL_OP_ZFAIL_DECR_WRAP						0x00008508
#define  NV2A_STENCIL_OP_ZPASS							0x00000378
#define   NV2A_STENCIL_OP_ZPASS_ZERO							0x00000000
#define   NV2A_STENCIL_OP_ZPASS_INVERT						0x0000150a
#define   NV2A_STENCIL_OP_ZPASS_KEEP							0x00001e00
#define   NV2A_STENCIL_OP_ZPASS_REPLACE						0x00001e01
#define   NV2A_STENCIL_OP_ZPASS_INCR							0x00001e02
#define   NV2A_STENCIL_OP_ZPASS_DECR							0x00001e03
#define   NV2A_STENCIL_OP_ZPASS_INCR_WRAP						0x00008507
#define   NV2A_STENCIL_OP_ZPASS_DECR_WRAP						0x00008508
#define  NV2A_SHADE_MODEL								0x0000037c
#define   NV2A_SHADE_MODEL_FLAT							0x00001d00
#define   NV2A_SHADE_MODEL_SMOOTH							0x00001d01
#define  NV2A_LINE_WIDTH								0x00000380
#define  NV2A_POLYGON_OFFSET_FACTOR							0x00000384
#define  NV2A_POLYGON_OFFSET_UNITS							0x00000388
#define  NV2A_POLYGON_MODE_FRONT							0x0000038c
#define   NV2A_POLYGON_MODE_FRONT_POINT						0x00001b00
#define   NV2A_POLYGON_MODE_FRONT_LINE						0x00001b01
#define   NV2A_POLYGON_MODE_FRONT_FILL						0x00001b02
#define  NV2A_POLYGON_MODE_BACK							0x00000390
#define   NV2A_POLYGON_MODE_BACK_POINT						0x00001b00
#define   NV2A_POLYGON_MODE_BACK_LINE						0x00001b01
#define   NV2A_POLYGON_MODE_BACK_FILL						0x00001b02
#define  NV2A_DEPTH_RANGE_NEAR							0x00000394
#define  NV2A_DEPTH_RANGE_FAR							0x00000398
#define  NV2A_CULL_FACE								0x0000039c
#define   NV2A_CULL_FACE_FRONT							0x00000404
#define   NV2A_CULL_FACE_BACK							0x00000405
#define   NV2A_CULL_FACE_FRONT_AND_BACK						0x00000408
#define  NV2A_FRONT_FACE								0x000003a0
#define   NV2A_FRONT_FACE_CW								0x00000900
#define   NV2A_FRONT_FACE_CCW							0x00000901
#define  NV2A_NORMALIZE_ENABLE							0x000003a4
#define  NV2A_COLOR_MATERIAL_FRONT_R							0x000003a8
#define  NV2A_COLOR_MATERIAL_FRONT_G							0x000003ac
#define  NV2A_COLOR_MATERIAL_FRONT_B							0x000003b0
#define  NV2A_COLOR_MATERIAL_FRONT_A							0x000003b4
#define  NV2A_SEPARATE_SPECULAR_ENABLE						0x000003b8
#define  NV2A_ENABLED_LIGHTS								0x000003bc
#define  NV2A_TX_GEN_S(x)								(0x000003c0+((x)*16))
#define  NV2A_TX_GEN_S__SIZE								0x00000004
#define   NV2A_TX_GEN_S_FALSE							0x00000000
#define   NV2A_TX_GEN_S_EYE_LINEAR							0x00002400
#define   NV2A_TX_GEN_S_OBJECT_LINEAR						0x00002401
#define   NV2A_TX_GEN_S_SPHERE_MAP							0x00002402
#define   NV2A_TX_GEN_S_NORMAL_MAP							0x00008511
#define   NV2A_TX_GEN_S_REFLECTION_MAP						0x00008512
#define  NV2A_TX_GEN_T(x)								(0x000003c4+((x)*16))
#define  NV2A_TX_GEN_T__SIZE								0x00000004
#define   NV2A_TX_GEN_T_FALSE							0x00000000
#define   NV2A_TX_GEN_T_EYE_LINEAR							0x00002400
#define   NV2A_TX_GEN_T_OBJECT_LINEAR						0x00002401
#define   NV2A_TX_GEN_T_SPHERE_MAP							0x00002402
#define   NV2A_TX_GEN_T_NORMAL_MAP							0x00008511
#define   NV2A_TX_GEN_T_REFLECTION_MAP						0x00008512
#define  NV2A_TX_GEN_R(x)								(0x000003c8+((x)*16))
#define  NV2A_TX_GEN_R__SIZE								0x00000004
#define   NV2A_TX_GEN_R_FALSE							0x00000000
#define   NV2A_TX_GEN_R_EYE_LINEAR							0x00002400
#define   NV2A_TX_GEN_R_OBJECT_LINEAR						0x00002401
#define   NV2A_TX_GEN_R_SPHERE_MAP							0x00002402
#define   NV2A_TX_GEN_R_NORMAL_MAP							0x00008511
#define   NV2A_TX_GEN_R_REFLECTION_MAP						0x00008512
#define  NV2A_TX_GEN_Q(x)								(0x000003cc+((x)*16))
#define  NV2A_TX_GEN_Q__SIZE								0x00000004
#define   NV2A_TX_GEN_Q_FALSE							0x00000000
#define   NV2A_TX_GEN_Q_EYE_LINEAR							0x00002400
#define   NV2A_TX_GEN_Q_OBJECT_LINEAR						0x00002401
#define   NV2A_TX_GEN_Q_SPHERE_MAP							0x00002402
#define   NV2A_TX_GEN_Q_NORMAL_MAP							0x00008511
#define   NV2A_TX_GEN_Q_REFLECTION_MAP						0x00008512
#define  NV2A_TX_MATRIX_ENABLE(x)							(0x00000420+((x)*4))
#define  NV2A_TX_MATRIX_ENABLE__SIZE							0x00000004
#define  NV2A_POINT_SIZE								0x0000043c
#define  NV2A_MODELVIEW0_MATRIX(x)							(0x00000480+((x)*4))
#define  NV2A_MODELVIEW0_MATRIX__SIZE						0x00000010
#define  NV2A_MODELVIEW1_MATRIX(x)							(0x000004c0+((x)*4))
#define  NV2A_MODELVIEW1_MATRIX__SIZE						0x00000010
#define  NV2A_MODELVIEW2_MATRIX(x)							(0x00000500+((x)*4))
#define  NV2A_MODELVIEW2_MATRIX__SIZE						0x00000010
#define  NV2A_MODELVIEW3_MATRIX(x)							(0x00000540+((x)*4))
#define  NV2A_MODELVIEW3_MATRIX__SIZE						0x00000010
#define  NV2A_INVERSE_MODELVIEW0_MATRIX(x)						(0x00000580+((x)*4))
#define  NV2A_INVERSE_MODELVIEW0_MATRIX__SIZE					0x00000010
#define  NV2A_INVERSE_MODELVIEW1_MATRIX(x)						(0x000005c0+((x)*4))
#define  NV2A_INVERSE_MODELVIEW1_MATRIX__SIZE					0x00000010
#define  NV2A_INVERSE_MODELVIEW2_MATRIX(x)						(0x00000600+((x)*4))
#define  NV2A_INVERSE_MODELVIEW2_MATRIX__SIZE					0x00000010
#define  NV2A_INVERSE_MODELVIEW3_MATRIX(x)						(0x00000640+((x)*4))
#define  NV2A_INVERSE_MODELVIEW3_MATRIX__SIZE					0x00000010
#define  NV2A_PROJECTION_MATRIX(x)							(0x00000680+((x)*4))
#define  NV2A_PROJECTION_MATRIX__SIZE						0x00000010
#define  NV2A_TX0_MATRIX(x)								(0x000006c0+((x)*4))
#define  NV2A_TX0_MATRIX__SIZE							0x00000010
#define  NV2A_TX1_MATRIX(x)								(0x00000700+((x)*4))
#define  NV2A_TX1_MATRIX__SIZE							0x00000010
#define  NV2A_TX2_MATRIX(x)								(0x00000740+((x)*4))
#define  NV2A_TX2_MATRIX__SIZE							0x00000010
#define  NV2A_TX3_MATRIX(x)								(0x00000780+((x)*4))
#define  NV2A_TX3_MATRIX__SIZE							0x00000010
#define  NV2A_TX0_CLIP_PLANE_A(x)							(0x00000840+((x)*16))
#define  NV2A_TX0_CLIP_PLANE_A__SIZE							0x00000004
#define  NV2A_TX0_CLIP_PLANE_B(x)							(0x00000844+((x)*16))
#define  NV2A_TX0_CLIP_PLANE_B__SIZE							0x00000004
#define  NV2A_TX0_CLIP_PLANE_C(x)							(0x00000848+((x)*16))
#define  NV2A_TX0_CLIP_PLANE_C__SIZE							0x00000004
#define  NV2A_TX0_CLIP_PLANE_D(x)							(0x0000084c+((x)*16))
#define  NV2A_TX0_CLIP_PLANE_D__SIZE							0x00000004
#define  NV2A_TX1_CLIP_PLANE_A(x)							(0x00000880+((x)*16))
#define  NV2A_TX1_CLIP_PLANE_A__SIZE							0x00000004
#define  NV2A_TX1_CLIP_PLANE_B(x)							(0x00000884+((x)*16))
#define  NV2A_TX1_CLIP_PLANE_B__SIZE							0x00000004
#define  NV2A_TX1_CLIP_PLANE_C(x)							(0x00000888+((x)*16))
#define  NV2A_TX1_CLIP_PLANE_C__SIZE							0x00000004
#define  NV2A_TX1_CLIP_PLANE_D(x)							(0x0000088c+((x)*16))
#define  NV2A_TX1_CLIP_PLANE_D__SIZE							0x00000004
#define  NV2A_TX2_CLIP_PLANE_A(x)							(0x000008c0+((x)*16))
#define  NV2A_TX2_CLIP_PLANE_A__SIZE							0x00000004
#define  NV2A_TX2_CLIP_PLANE_B(x)							(0x000008c4+((x)*16))
#define  NV2A_TX2_CLIP_PLANE_B__SIZE							0x00000004
#define  NV2A_TX2_CLIP_PLANE_C(x)							(0x000008c8+((x)*16))
#define  NV2A_TX2_CLIP_PLANE_C__SIZE							0x00000004
#define  NV2A_TX2_CLIP_PLANE_D(x)							(0x000008cc+((x)*16))
#define  NV2A_TX2_CLIP_PLANE_D__SIZE							0x00000004
#define  NV2A_TX3_CLIP_PLANE_A(x)							(0x00000900+((x)*16))
#define  NV2A_TX3_CLIP_PLANE_A__SIZE							0x00000004
#define  NV2A_TX3_CLIP_PLANE_B(x)							(0x00000904+((x)*16))
#define  NV2A_TX3_CLIP_PLANE_B__SIZE							0x00000004
#define  NV2A_TX3_CLIP_PLANE_C(x)							(0x00000908+((x)*16))
#define  NV2A_TX3_CLIP_PLANE_C__SIZE							0x00000004
#define  NV2A_TX3_CLIP_PLANE_D(x)							(0x0000090c+((x)*16))
#define  NV2A_TX3_CLIP_PLANE_D__SIZE							0x00000004
#define  NV2A_FOG_EQUATION_CONSTANT							0x000009c0
#define  NV2A_FOG_EQUATION_LINEAR							0x000009c4
#define  NV2A_FOG_EQUATION_QUADRATIC							0x000009c8
#define  NV2A_FRONT_MATERIAL_SHININESS(x)						(0x000009e0+((x)*4))
#define  NV2A_FRONT_MATERIAL_SHININESS__SIZE						0x00000006
#define  NV2A_SWATH_WIDTH                               0x000009f8 // Dxbx
#define  NV2A_FLAT_SHADE_OP                             0x000009fc // Dxbx
#define  NV2A_LIGHT_MODEL_FRONT_SIDE_PRODUCT_AMBIENT_PLUS_EMISSION_R			0x00000a10
#define  NV2A_LIGHT_MODEL_FRONT_SIDE_PRODUCT_AMBIENT_PLUS_EMISSION_G			0x00000a14
#define  NV2A_LIGHT_MODEL_FRONT_SIDE_PRODUCT_AMBIENT_PLUS_EMISSION_B			0x00000a18
#define  NV2A_VIEWPORT_SCALE0_X							0x00000a20
#define  NV2A_VIEWPORT_SCALE0_Y							0x00000a24
#define  NV2A_VIEWPORT_SCALE0_Z							0x00000a28
#define  NV2A_VIEWPORT_SCALE0_W							0x00000a2c
#define  NV2A_POINT_PARAMETER(x)							(0x00000a30+((x)*4))
#define  NV2A_POINT_PARAMETER__SIZE							0x00000008
#define  NV2A_RC_CONSTANT_COLOR0(x)							(0x00000a60+((x)*4))
#define  NV2A_RC_CONSTANT_COLOR0__SIZE						0x00000008
#define   NV2A_RC_CONSTANT_COLOR0_B_SHIFT						0
#define   NV2A_RC_CONSTANT_COLOR0_B_MASK						0x000000ff
#define   NV2A_RC_CONSTANT_COLOR0_G_SHIFT						8
#define   NV2A_RC_CONSTANT_COLOR0_G_MASK						0x0000ff00
#define   NV2A_RC_CONSTANT_COLOR0_R_SHIFT						16
#define   NV2A_RC_CONSTANT_COLOR0_R_MASK						0x00ff0000
#define   NV2A_RC_CONSTANT_COLOR0_A_SHIFT						24
#define   NV2A_RC_CONSTANT_COLOR0_A_MASK						0xff000000
#define  NV2A_RC_CONSTANT_COLOR1(x)							(0x00000a80+((x)*4))
#define  NV2A_RC_CONSTANT_COLOR1__SIZE						0x00000008
#define   NV2A_RC_CONSTANT_COLOR1_B_SHIFT						0
#define   NV2A_RC_CONSTANT_COLOR1_B_MASK						0x000000ff
#define   NV2A_RC_CONSTANT_COLOR1_G_SHIFT						8
#define   NV2A_RC_CONSTANT_COLOR1_G_MASK						0x0000ff00
#define   NV2A_RC_CONSTANT_COLOR1_R_SHIFT						16
#define   NV2A_RC_CONSTANT_COLOR1_R_MASK						0x00ff0000
#define   NV2A_RC_CONSTANT_COLOR1_A_SHIFT						24
#define   NV2A_RC_CONSTANT_COLOR1_A_MASK						0xff000000
#define  NV2A_RC_OUT_ALPHA(x)							(0x00000aa0+((x)*4))
#define  NV2A_RC_OUT_ALPHA__SIZE							0x00000008
#define   NV2A_RC_OUT_ALPHA_CD_OUTPUT_SHIFT						0
#define   NV2A_RC_OUT_ALPHA_CD_OUTPUT_MASK						0x0000000f
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_ZERO						0x00000000
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_CONSTANT_COLOR0_NV				0x00000001
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_CONSTANT_COLOR1_NV				0x00000002
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_FOG						0x00000003
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_PRIMARY_COLOR_NV				0x00000004
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_SECONDARY_COLOR_NV				0x00000005
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_TEXTURE0_ARB					0x00000008
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_TEXTURE1_ARB					0x00000009
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_SPARE0_NV					0x0000000c
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_SPARE1_NV					0x0000000d
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_SPARE0_PLUS_SECONDARY_COLOR_NV		0x0000000e
#define    NV2A_RC_OUT_ALPHA_CD_OUTPUT_E_TIMES_F_NV					0x0000000f
#define   NV2A_RC_OUT_ALPHA_AB_OUTPUT_SHIFT						4
#define   NV2A_RC_OUT_ALPHA_AB_OUTPUT_MASK						0x000000f0
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_ZERO						0x00000000
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_CONSTANT_COLOR0_NV				0x00000010
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_CONSTANT_COLOR1_NV				0x00000020
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_FOG						0x00000030
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_PRIMARY_COLOR_NV				0x00000040
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_SECONDARY_COLOR_NV				0x00000050
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_TEXTURE0_ARB					0x00000080
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_TEXTURE1_ARB					0x00000090
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_SPARE0_NV					0x000000c0
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_SPARE1_NV					0x000000d0
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_SPARE0_PLUS_SECONDARY_COLOR_NV		0x000000e0
#define    NV2A_RC_OUT_ALPHA_AB_OUTPUT_E_TIMES_F_NV					0x000000f0
#define   NV2A_RC_OUT_ALPHA_SUM_OUTPUT_SHIFT						8
#define   NV2A_RC_OUT_ALPHA_SUM_OUTPUT_MASK						0x00000f00
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_ZERO						0x00000000
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_CONSTANT_COLOR0_NV				0x00000100
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_CONSTANT_COLOR1_NV				0x00000200
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_FOG						0x00000300
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_PRIMARY_COLOR_NV				0x00000400
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_SECONDARY_COLOR_NV				0x00000500
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_TEXTURE0_ARB					0x00000800
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_TEXTURE1_ARB					0x00000900
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_SPARE0_NV					0x00000c00
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_SPARE1_NV					0x00000d00
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_SPARE0_PLUS_SECONDARY_COLOR_NV		0x00000e00
#define    NV2A_RC_OUT_ALPHA_SUM_OUTPUT_E_TIMES_F_NV					0x00000f00
#define   NV2A_RC_OUT_ALPHA_CD_DOT_PRODUCT						(1 << 12)
#define   NV2A_RC_OUT_ALPHA_AB_DOT_PRODUCT						(1 << 13)
#define   NV2A_RC_OUT_ALPHA_MUX_SUM							(1 << 14)
#define   NV2A_RC_OUT_ALPHA_BIAS							(1 << 15)
#define    NV2A_RC_OUT_ALPHA_BIAS_NONE						0x00000000
#define    NV2A_RC_OUT_ALPHA_BIAS_BIAS_BY_NEGATIVE_ONE_HALF_NV			0x00008000
#define   NV2A_RC_OUT_ALPHA_SCALE_SHIFT						17
#define   NV2A_RC_OUT_ALPHA_SCALE_MASK						0x00000000
#define    NV2A_RC_OUT_ALPHA_SCALE_NONE						0x00000000
#define    NV2A_RC_OUT_ALPHA_SCALE_SCALE_BY_TWO_NV					0x00020000
#define    NV2A_RC_OUT_ALPHA_SCALE_SCALE_BY_FOUR_NV					0x00040000
#define    NV2A_RC_OUT_ALPHA_SCALE_SCALE_BY_ONE_HALF_NV				0x00060000
#define  NV2A_RC_IN_RGB(x)								(0x00000ac0+((x)*4))
#define  NV2A_RC_IN_RGB__SIZE							0x00000008
#define   NV2A_RC_IN_RGB_D_INPUT_SHIFT						0
#define   NV2A_RC_IN_RGB_D_INPUT_MASK						0x0000000f
#define    NV2A_RC_IN_RGB_D_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_RGB_D_INPUT_CONSTANT_COLOR0_NV					0x00000001
#define    NV2A_RC_IN_RGB_D_INPUT_CONSTANT_COLOR1_NV					0x00000002
#define    NV2A_RC_IN_RGB_D_INPUT_FOG						0x00000003
#define    NV2A_RC_IN_RGB_D_INPUT_PRIMARY_COLOR_NV					0x00000004
#define    NV2A_RC_IN_RGB_D_INPUT_SECONDARY_COLOR_NV					0x00000005
#define    NV2A_RC_IN_RGB_D_INPUT_TEXTURE0_ARB					0x00000008
#define    NV2A_RC_IN_RGB_D_INPUT_TEXTURE1_ARB					0x00000009
#define    NV2A_RC_IN_RGB_D_INPUT_SPARE0_NV						0x0000000c
#define    NV2A_RC_IN_RGB_D_INPUT_SPARE1_NV						0x0000000d
#define    NV2A_RC_IN_RGB_D_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0000000e
#define    NV2A_RC_IN_RGB_D_INPUT_E_TIMES_F_NV					0x0000000f
#define   NV2A_RC_IN_RGB_D_COMPONENT_USAGE						(1 <<  4)
#define    NV2A_RC_IN_RGB_D_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_IN_RGB_D_COMPONENT_USAGE_ALPHA					0x00000010
#define   NV2A_RC_IN_RGB_D_MAPPING_SHIFT						5
#define   NV2A_RC_IN_RGB_D_MAPPING_MASK						0x000000e0
#define    NV2A_RC_IN_RGB_D_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_RGB_D_MAPPING_UNSIGNED_INVERT_NV				0x00000020
#define    NV2A_RC_IN_RGB_D_MAPPING_EXPAND_NORMAL_NV					0x00000040
#define    NV2A_RC_IN_RGB_D_MAPPING_EXPAND_NEGATE_NV					0x00000060
#define    NV2A_RC_IN_RGB_D_MAPPING_HALF_BIAS_NORMAL_NV				0x00000080
#define    NV2A_RC_IN_RGB_D_MAPPING_HALF_BIAS_NEGATE_NV				0x000000a0
#define    NV2A_RC_IN_RGB_D_MAPPING_SIGNED_IDENTITY_NV				0x000000c0
#define    NV2A_RC_IN_RGB_D_MAPPING_SIGNED_NEGATE_NV					0x000000e0
#define   NV2A_RC_IN_RGB_C_INPUT_SHIFT						8
#define   NV2A_RC_IN_RGB_C_INPUT_MASK						0x00000f00
#define    NV2A_RC_IN_RGB_C_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_RGB_C_INPUT_CONSTANT_COLOR0_NV					0x00000100
#define    NV2A_RC_IN_RGB_C_INPUT_CONSTANT_COLOR1_NV					0x00000200
#define    NV2A_RC_IN_RGB_C_INPUT_FOG						0x00000300
#define    NV2A_RC_IN_RGB_C_INPUT_PRIMARY_COLOR_NV					0x00000400
#define    NV2A_RC_IN_RGB_C_INPUT_SECONDARY_COLOR_NV					0x00000500
#define    NV2A_RC_IN_RGB_C_INPUT_TEXTURE0_ARB					0x00000800
#define    NV2A_RC_IN_RGB_C_INPUT_TEXTURE1_ARB					0x00000900
#define    NV2A_RC_IN_RGB_C_INPUT_SPARE0_NV						0x00000c00
#define    NV2A_RC_IN_RGB_C_INPUT_SPARE1_NV						0x00000d00
#define    NV2A_RC_IN_RGB_C_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x00000e00
#define    NV2A_RC_IN_RGB_C_INPUT_E_TIMES_F_NV					0x00000f00
#define   NV2A_RC_IN_RGB_C_COMPONENT_USAGE						(1 << 12)
#define    NV2A_RC_IN_RGB_C_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_IN_RGB_C_COMPONENT_USAGE_ALPHA					0x00001000
#define   NV2A_RC_IN_RGB_C_MAPPING_SHIFT						13
#define   NV2A_RC_IN_RGB_C_MAPPING_MASK						0x0000e000
#define    NV2A_RC_IN_RGB_C_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_RGB_C_MAPPING_UNSIGNED_INVERT_NV				0x00002000
#define    NV2A_RC_IN_RGB_C_MAPPING_EXPAND_NORMAL_NV					0x00004000
#define    NV2A_RC_IN_RGB_C_MAPPING_EXPAND_NEGATE_NV					0x00006000
#define    NV2A_RC_IN_RGB_C_MAPPING_HALF_BIAS_NORMAL_NV				0x00008000
#define    NV2A_RC_IN_RGB_C_MAPPING_HALF_BIAS_NEGATE_NV				0x0000a000
#define    NV2A_RC_IN_RGB_C_MAPPING_SIGNED_IDENTITY_NV				0x0000c000
#define    NV2A_RC_IN_RGB_C_MAPPING_SIGNED_NEGATE_NV					0x0000e000
#define   NV2A_RC_IN_RGB_B_INPUT_SHIFT						16
#define   NV2A_RC_IN_RGB_B_INPUT_MASK						0x000f0000
#define    NV2A_RC_IN_RGB_B_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_RGB_B_INPUT_CONSTANT_COLOR0_NV					0x00010000
#define    NV2A_RC_IN_RGB_B_INPUT_CONSTANT_COLOR1_NV					0x00020000
#define    NV2A_RC_IN_RGB_B_INPUT_FOG						0x00030000
#define    NV2A_RC_IN_RGB_B_INPUT_PRIMARY_COLOR_NV					0x00040000
#define    NV2A_RC_IN_RGB_B_INPUT_SECONDARY_COLOR_NV					0x00050000
#define    NV2A_RC_IN_RGB_B_INPUT_TEXTURE0_ARB					0x00080000
#define    NV2A_RC_IN_RGB_B_INPUT_TEXTURE1_ARB					0x00090000
#define    NV2A_RC_IN_RGB_B_INPUT_SPARE0_NV						0x000c0000
#define    NV2A_RC_IN_RGB_B_INPUT_SPARE1_NV						0x000d0000
#define    NV2A_RC_IN_RGB_B_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x000e0000
#define    NV2A_RC_IN_RGB_B_INPUT_E_TIMES_F_NV					0x000f0000
#define   NV2A_RC_IN_RGB_B_COMPONENT_USAGE						(1 << 20)
#define    NV2A_RC_IN_RGB_B_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_IN_RGB_B_COMPONENT_USAGE_ALPHA					0x00100000
#define   NV2A_RC_IN_RGB_B_MAPPING_SHIFT						21
#define   NV2A_RC_IN_RGB_B_MAPPING_MASK						0x00e00000
#define    NV2A_RC_IN_RGB_B_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_RGB_B_MAPPING_UNSIGNED_INVERT_NV				0x00200000
#define    NV2A_RC_IN_RGB_B_MAPPING_EXPAND_NORMAL_NV					0x00400000
#define    NV2A_RC_IN_RGB_B_MAPPING_EXPAND_NEGATE_NV					0x00600000
#define    NV2A_RC_IN_RGB_B_MAPPING_HALF_BIAS_NORMAL_NV				0x00800000
#define    NV2A_RC_IN_RGB_B_MAPPING_HALF_BIAS_NEGATE_NV				0x00a00000
#define    NV2A_RC_IN_RGB_B_MAPPING_SIGNED_IDENTITY_NV				0x00c00000
#define    NV2A_RC_IN_RGB_B_MAPPING_SIGNED_NEGATE_NV					0x00e00000
#define   NV2A_RC_IN_RGB_A_INPUT_SHIFT						24
#define   NV2A_RC_IN_RGB_A_INPUT_MASK						0x0f000000
#define    NV2A_RC_IN_RGB_A_INPUT_ZERO						0x00000000
#define    NV2A_RC_IN_RGB_A_INPUT_CONSTANT_COLOR0_NV					0x01000000
#define    NV2A_RC_IN_RGB_A_INPUT_CONSTANT_COLOR1_NV					0x02000000
#define    NV2A_RC_IN_RGB_A_INPUT_FOG						0x03000000
#define    NV2A_RC_IN_RGB_A_INPUT_PRIMARY_COLOR_NV					0x04000000
#define    NV2A_RC_IN_RGB_A_INPUT_SECONDARY_COLOR_NV					0x05000000
#define    NV2A_RC_IN_RGB_A_INPUT_TEXTURE0_ARB					0x08000000
#define    NV2A_RC_IN_RGB_A_INPUT_TEXTURE1_ARB					0x09000000
#define    NV2A_RC_IN_RGB_A_INPUT_SPARE0_NV						0x0c000000
#define    NV2A_RC_IN_RGB_A_INPUT_SPARE1_NV						0x0d000000
#define    NV2A_RC_IN_RGB_A_INPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0e000000
#define    NV2A_RC_IN_RGB_A_INPUT_E_TIMES_F_NV					0x0f000000
#define   NV2A_RC_IN_RGB_A_COMPONENT_USAGE						(1 << 28)
#define    NV2A_RC_IN_RGB_A_COMPONENT_USAGE_RGB					0x00000000
#define    NV2A_RC_IN_RGB_A_COMPONENT_USAGE_ALPHA					0x10000000
#define   NV2A_RC_IN_RGB_A_MAPPING_SHIFT						29
#define   NV2A_RC_IN_RGB_A_MAPPING_MASK						0xe0000000
#define    NV2A_RC_IN_RGB_A_MAPPING_UNSIGNED_IDENTITY_NV				0x00000000
#define    NV2A_RC_IN_RGB_A_MAPPING_UNSIGNED_INVERT_NV				0x20000000
#define    NV2A_RC_IN_RGB_A_MAPPING_EXPAND_NORMAL_NV					0x40000000
#define    NV2A_RC_IN_RGB_A_MAPPING_EXPAND_NEGATE_NV					0x60000000
#define    NV2A_RC_IN_RGB_A_MAPPING_HALF_BIAS_NORMAL_NV				0x80000000
#define    NV2A_RC_IN_RGB_A_MAPPING_HALF_BIAS_NEGATE_NV				0xa0000000
#define    NV2A_RC_IN_RGB_A_MAPPING_SIGNED_IDENTITY_NV				0xc0000000
#define    NV2A_RC_IN_RGB_A_MAPPING_SIGNED_NEGATE_NV					0xe0000000
#define  NV2A_VIEWPORT_SCALE1_X							0x00000af0
#define  NV2A_VIEWPORT_SCALE1_Y							0x00000af4
#define  NV2A_VIEWPORT_SCALE1_Z							0x00000af8
#define  NV2A_VIEWPORT_SCALE1_W							0x00000afc
#define  NV2A_VP_UPLOAD_INST(x)							(0x00000b00+((x)*4))
#define  NV2A_VP_UPLOAD_INST__SIZE							0x00000004
#define  NV2A_VP_UPLOAD_CONST(x)							(0x00000b80+((x)*4))
#define  NV2A_VP_UPLOAD_CONST__SIZE							0x00000004
#define  NV2A_LIGHT_BACK_SIDE_PRODUCT_AMBIENT_R(x)					(0x00000c00+((x)*64))
#define  NV2A_LIGHT_BACK_SIDE_PRODUCT_AMBIENT_R__SIZE				0x00000008
#define  NV2A_LIGHT_BACK_SIDE_PRODUCT_AMBIENT_G(x)					(0x00000c04+((x)*64))
#define  NV2A_LIGHT_BACK_SIDE_PRODUCT_AMBIENT_G__SIZE				0x00000008
#define  NV2A_LIGHT_BACK_SIDE_PRODUCT_AMBIENT_B(x)					(0x00000c08+((x)*64))
#define  NV2A_LIGHT_BACK_SIDE_PRODUCT_AMBIENT_B__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_AMBIENT_R(x)					(0x00001000+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_AMBIENT_R__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_AMBIENT_G(x)					(0x00001004+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_AMBIENT_G__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_AMBIENT_B(x)					(0x00001008+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_AMBIENT_B__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_DIFFUSE_R(x)					(0x0000100c+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_DIFFUSE_R__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_DIFFUSE_G(x)					(0x00001010+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_DIFFUSE_G__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_DIFFUSE_B(x)					(0x00001014+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_DIFFUSE_B__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_SPECULAR_R(x)					(0x00001018+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_SPECULAR_R__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_SPECULAR_G(x)					(0x0000101c+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_SPECULAR_G__SIZE				0x00000008
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_SPECULAR_B(x)					(0x00001020+((x)*128))
#define  NV2A_LIGHT_FRONT_SIDE_PRODUCT_SPECULAR_B__SIZE				0x00000008
#define  NV2A_LIGHT_HALF_VECTOR_X(x)							(0x00001028+((x)*128))
#define  NV2A_LIGHT_HALF_VECTOR_X__SIZE						0x00000008
#define  NV2A_LIGHT_HALF_VECTOR_Y(x)							(0x0000102c+((x)*128))
#define  NV2A_LIGHT_HALF_VECTOR_Y__SIZE						0x00000008
#define  NV2A_LIGHT_HALF_VECTOR_Z(x)							(0x00001030+((x)*128))
#define  NV2A_LIGHT_HALF_VECTOR_Z__SIZE						0x00000008
#define  NV2A_LIGHT_DIRECTION_X(x)							(0x00001034+((x)*128))
#define  NV2A_LIGHT_DIRECTION_X__SIZE						0x00000008
#define  NV2A_LIGHT_DIRECTION_Y(x)							(0x00001038+((x)*128))
#define  NV2A_LIGHT_DIRECTION_Y__SIZE						0x00000008
#define  NV2A_LIGHT_DIRECTION_Z(x)							(0x0000103c+((x)*128))
#define  NV2A_LIGHT_DIRECTION_Z__SIZE						0x00000008
#define  NV2A_LIGHT_POSITION_X(x)							(0x0000105c+((x)*128))
#define  NV2A_LIGHT_POSITION_X__SIZE							0x00000008
#define  NV2A_LIGHT_POSITION_Y(x)							(0x00001060+((x)*128))
#define  NV2A_LIGHT_POSITION_Y__SIZE							0x00000008
#define  NV2A_LIGHT_POSITION_Z(x)							(0x00001064+((x)*128))
#define  NV2A_LIGHT_POSITION_Z__SIZE							0x00000008
#define  NV2A_LIGHT_CONSTANT_ATTENUATION(x)						(0x00001068+((x)*128))
#define  NV2A_LIGHT_CONSTANT_ATTENUATION__SIZE					0x00000008
#define  NV2A_LIGHT_LINEAR_ATTENUATION(x)						(0x0000106c+((x)*128))
#define  NV2A_LIGHT_LINEAR_ATTENUATION__SIZE						0x00000008
#define  NV2A_LIGHT_QUADRATIC_ATTENUATION(x)						(0x00001070+((x)*128))
#define  NV2A_LIGHT_QUADRATIC_ATTENUATION__SIZE					0x00000008
#define  NV2A_POLYGON_STIPPLE_ENABLE							0x0000147c
#define  NV2A_POLYGON_STIPPLE_PATTERN(x)						(0x00001480+((x)*4))
#define  NV2A_POLYGON_STIPPLE_PATTERN__SIZE						0x00000020
#define  NV2A_VERTEX_POS_3F_X							0x00001500
#define  NV2A_VERTEX_POS_3F_Y							0x00001504
#define  NV2A_VERTEX_POS_3F_Z							0x00001508
#define  NV2A_VERTEX_POS_4F_X							0x00001518
#define  NV2A_VERTEX_POS_4F_Y							0x0000151c
#define  NV2A_VERTEX_POS_4F_Z							0x00001520
#define  NV2A_VERTEX_POS_3I_XY							0x00001528
#define   NV2A_VERTEX_POS_3I_XY_X_SHIFT						0
#define   NV2A_VERTEX_POS_3I_XY_X_MASK						0x0000ffff
#define   NV2A_VERTEX_POS_3I_XY_Y_SHIFT						16
#define   NV2A_VERTEX_POS_3I_XY_Y_MASK						0xffff0000
#define  NV2A_VERTEX_POS_3I_Z							0x0000152c
#define   NV2A_VERTEX_POS_3I_Z_Z_SHIFT						0
#define   NV2A_VERTEX_POS_3I_Z_Z_MASK						0x0000ffff
#define  NV2A_VERTEX_NOR_3F_X							0x00001530
#define  NV2A_VERTEX_NOR_3F_Y							0x00001534
#define  NV2A_VERTEX_NOR_3F_Z							0x00001538
#define  NV2A_VERTEX_NOR_3I_XY							0x00001540
#define   NV2A_VERTEX_NOR_3I_XY_X_SHIFT						0
#define   NV2A_VERTEX_NOR_3I_XY_X_MASK						0x0000ffff
#define   NV2A_VERTEX_NOR_3I_XY_Y_SHIFT						16
#define   NV2A_VERTEX_NOR_3I_XY_Y_MASK						0xffff0000
#define  NV2A_VERTEX_NOR_3I_Z							0x00001544
#define   NV2A_VERTEX_NOR_3I_Z_Z_SHIFT						0
#define   NV2A_VERTEX_NOR_3I_Z_Z_MASK						0x0000ffff
#define  NV2A_VERTEX_COL_4F_X							0x00001550
#define  NV2A_VERTEX_COL_4F_Y							0x00001554
#define  NV2A_VERTEX_COL_4F_Z							0x00001558
#define  NV2A_VERTEX_COL_4F_W							0x0000155c
#define  NV2A_VERTEX_COL_3F_X							0x00001560
#define  NV2A_VERTEX_COL_3F_Y							0x00001564
#define  NV2A_VERTEX_COL_3F_Z							0x00001568
#define  NV2A_VERTEX_COL_4I								0x0000156c
#define   NV2A_VERTEX_COL_4I_R_SHIFT							0
#define   NV2A_VERTEX_COL_4I_R_MASK							0x000000ff
#define   NV2A_VERTEX_COL_4I_G_SHIFT							8
#define   NV2A_VERTEX_COL_4I_G_MASK							0x0000ff00
#define   NV2A_VERTEX_COL_4I_B_SHIFT							16
#define   NV2A_VERTEX_COL_4I_B_MASK							0x00ff0000
#define   NV2A_VERTEX_COL_4I_A_SHIFT							24
#define   NV2A_VERTEX_COL_4I_A_MASK							0xff000000
#define  NV2A_VERTEX_COL2_3F_X							0x00001580
#define  NV2A_VERTEX_COL2_3F_Y							0x00001584
#define  NV2A_VERTEX_COL2_3F_Z							0x00001588
#define  NV2A_VERTEX_COL2_4I								0x0000158c
#define   NV2A_VERTEX_COL2_4I_R_SHIFT						0
#define   NV2A_VERTEX_COL2_4I_R_MASK							0x000000ff
#define   NV2A_VERTEX_COL2_4I_G_SHIFT						8
#define   NV2A_VERTEX_COL2_4I_G_MASK							0x0000ff00
#define   NV2A_VERTEX_COL2_4I_B_SHIFT						16
#define   NV2A_VERTEX_COL2_4I_B_MASK							0x00ff0000
#define   NV2A_VERTEX_COL2_4I_A_SHIFT						24
#define   NV2A_VERTEX_COL2_4I_A_MASK							0xff000000
#define  NV2A_VERTEX_TX0_2F_S							0x00001590
#define  NV2A_VERTEX_TX0_2F_T							0x00001594
#define  NV2A_VERTEX_TX0_2I								0x00001598
#define   NV2A_VERTEX_TX0_2I_S_SHIFT							0
#define   NV2A_VERTEX_TX0_2I_S_MASK							0x0000ffff
#define   NV2A_VERTEX_TX0_2I_T_SHIFT							16
#define   NV2A_VERTEX_TX0_2I_T_MASK							0xffff0000
#define  NV2A_VERTEX_TX0_4F_S							0x000015a0
#define  NV2A_VERTEX_TX0_4F_T							0x000015a4
#define  NV2A_VERTEX_TX0_4F_R							0x000015a8
#define  NV2A_VERTEX_TX0_4F_Q							0x000015ac
#define  NV2A_VERTEX_TX0_4I_ST							0x000015b0
#define   NV2A_VERTEX_TX0_4I_ST_S_SHIFT						0
#define   NV2A_VERTEX_TX0_4I_ST_S_MASK						0x0000ffff
#define   NV2A_VERTEX_TX0_4I_ST_T_SHIFT						16
#define   NV2A_VERTEX_TX0_4I_ST_T_MASK						0xffff0000
#define  NV2A_VERTEX_TX0_4I_RQ							0x000015b4
#define   NV2A_VERTEX_TX0_4I_RQ_R_SHIFT						0
#define   NV2A_VERTEX_TX0_4I_RQ_R_MASK						0x0000ffff
#define   NV2A_VERTEX_TX0_4I_RQ_Q_SHIFT						16
#define   NV2A_VERTEX_TX0_4I_RQ_Q_MASK						0xffff0000
#define  NV2A_VERTEX_TX1_2F_S							0x000015b8
#define  NV2A_VERTEX_TX1_2F_T							0x000015bc
#define  NV2A_VERTEX_TX1_2I								0x000015c0
#define   NV2A_VERTEX_TX1_2I_S_SHIFT							0
#define   NV2A_VERTEX_TX1_2I_S_MASK							0x0000ffff
#define   NV2A_VERTEX_TX1_2I_T_SHIFT							16
#define   NV2A_VERTEX_TX1_2I_T_MASK							0xffff0000
#define  NV2A_VERTEX_TX1_4F_S							0x000015c8
#define  NV2A_VERTEX_TX1_4F_T							0x000015cc
#define  NV2A_VERTEX_TX1_4F_R							0x000015d0
#define  NV2A_VERTEX_TX1_4F_Q							0x000015d4
#define  NV2A_VERTEX_TX1_4I_ST							0x000015d8
#define   NV2A_VERTEX_TX1_4I_ST_S_SHIFT						0
#define   NV2A_VERTEX_TX1_4I_ST_S_MASK						0x0000ffff
#define   NV2A_VERTEX_TX1_4I_ST_T_SHIFT						16
#define   NV2A_VERTEX_TX1_4I_ST_T_MASK						0xffff0000
#define  NV2A_VERTEX_TX1_4I_RQ							0x000015dc
#define   NV2A_VERTEX_TX1_4I_RQ_R_SHIFT						0
#define   NV2A_VERTEX_TX1_4I_RQ_R_MASK						0x0000ffff
#define   NV2A_VERTEX_TX1_4I_RQ_Q_SHIFT						16
#define   NV2A_VERTEX_TX1_4I_RQ_Q_MASK						0xffff0000
#define  NV2A_VERTEX_TX2_2F_S							0x000015e0
#define  NV2A_VERTEX_TX2_2F_T							0x000015e4
#define  NV2A_VERTEX_TX2_2I								0x000015e8
#define   NV2A_VERTEX_TX2_2I_S_SHIFT							0
#define   NV2A_VERTEX_TX2_2I_S_MASK							0x0000ffff
#define   NV2A_VERTEX_TX2_2I_T_SHIFT							16
#define   NV2A_VERTEX_TX2_2I_T_MASK							0xffff0000
#define  NV2A_VERTEX_TX2_4F_S							0x000015f0
#define  NV2A_VERTEX_TX2_4F_T							0x000015f4
#define  NV2A_VERTEX_TX2_4F_R							0x000015f8
#define  NV2A_VERTEX_TX2_4F_Q							0x000015fc
#define  NV2A_VERTEX_TX2_4I_ST							0x00001600
#define   NV2A_VERTEX_TX2_4I_ST_S_SHIFT						0
#define   NV2A_VERTEX_TX2_4I_ST_S_MASK						0x0000ffff
#define   NV2A_VERTEX_TX2_4I_ST_T_SHIFT						16
#define   NV2A_VERTEX_TX2_4I_ST_T_MASK						0xffff0000
#define  NV2A_VERTEX_TX2_4I_RQ							0x00001604
#define   NV2A_VERTEX_TX2_4I_RQ_R_SHIFT						0
#define   NV2A_VERTEX_TX2_4I_RQ_R_MASK						0x0000ffff
#define   NV2A_VERTEX_TX2_4I_RQ_Q_SHIFT						16
#define   NV2A_VERTEX_TX2_4I_RQ_Q_MASK						0xffff0000
#define  NV2A_VERTEX_TX3_2F_S							0x00001608
#define  NV2A_VERTEX_TX3_2F_T							0x0000160c
#define  NV2A_VERTEX_TX3_2I								0x00001610
#define   NV2A_VERTEX_TX3_2I_S_SHIFT							0
#define   NV2A_VERTEX_TX3_2I_S_MASK							0x0000ffff
#define   NV2A_VERTEX_TX3_2I_T_SHIFT							16
#define   NV2A_VERTEX_TX3_2I_T_MASK							0xffff0000
#define  NV2A_VERTEX_TX3_4F_S							0x00001620
#define  NV2A_VERTEX_TX3_4F_T							0x00001624
#define  NV2A_VERTEX_TX3_4F_R							0x00001628
#define  NV2A_VERTEX_TX3_4F_Q							0x0000162c
#define  NV2A_VERTEX_TX3_4I_ST							0x00001630
#define   NV2A_VERTEX_TX3_4I_ST_S_SHIFT						0
#define   NV2A_VERTEX_TX3_4I_ST_S_MASK						0x0000ffff
#define   NV2A_VERTEX_TX3_4I_ST_T_SHIFT						16
#define   NV2A_VERTEX_TX3_4I_ST_T_MASK						0xffff0000
#define  NV2A_VERTEX_TX3_4I_RQ							0x00001634
#define   NV2A_VERTEX_TX3_4I_RQ_R_SHIFT						0
#define   NV2A_VERTEX_TX3_4I_RQ_R_MASK						0x0000ffff
#define   NV2A_VERTEX_TX3_4I_RQ_Q_SHIFT						16
#define   NV2A_VERTEX_TX3_4I_RQ_Q_MASK						0xffff0000
#define  NV2A_VERTEX_FOG_1F								0x00001698
#define  NV2A_EDGEFLAG_ENABLE							0x000016bc
#define  NV2A_VTXBUF_ADDRESS(x)							(0x00001720+((x)*4))
#define  NV2A_VTXBUF_ADDRESS__SIZE							0x00000010
#define   NV2A_VTXBUF_ADDRESS_DMA1							(1 << 31)
#define   NV2A_VTXBUF_ADDRESS_OFFSET_SHIFT						0
#define   NV2A_VTXBUF_ADDRESS_OFFSET_MASK						0x0fffffff
#define  NV2A_VTXFMT(x)								(0x00001760+((x)*4))
#define  NV2A_VTXFMT__SIZE								0x00000010
#define   NV2A_VTXFMT_TYPE_SHIFT							0
#define   NV2A_VTXFMT_TYPE_MASK							0x0000000f
#define    NV2A_VTXFMT_TYPE_FLOAT							0x00000002
#define    NV2A_VTXFMT_TYPE_UBYTE							0x00000004
#define    NV2A_VTXFMT_TYPE_USHORT							0x00000005
#define   NV2A_VTXFMT_SIZE_SHIFT							4
#define   NV2A_VTXFMT_SIZE_MASK							0x000000f0
#define   NV2A_VTXFMT_STRIDE_SHIFT							8
#define   NV2A_VTXFMT_STRIDE_MASK							0x0000ff00
#define  NV2A_LIGHT_MODEL_BACK_SIDE_PRODUCT_AMBIENT_PLUS_EMISSION_R			0x000017a0
#define  NV2A_LIGHT_MODEL_BACK_SIDE_PRODUCT_AMBIENT_PLUS_EMISSION_G			0x000017a4
#define  NV2A_LIGHT_MODEL_BACK_SIDE_PRODUCT_AMBIENT_PLUS_EMISSION_B			0x000017a8
#define  NV2A_COLOR_MATERIAL_BACK_A							0x000017ac
#define  NV2A_COLOR_MATERIAL_BACK_R							0x000017b0
#define  NV2A_COLOR_MATERIAL_BACK_G							0x000017b4
#define  NV2A_COLOR_MATERIAL_BACK_B							0x000017b8
#define  NV2A_COLOR_LOGIC_OP_ENABLE							0x000017bc
#define  NV2A_COLOR_LOGIC_OP_OP							0x000017c0
#define   NV2A_COLOR_LOGIC_OP_OP_CLEAR						0x00001500
#define   NV2A_COLOR_LOGIC_OP_OP_AND							0x00001501
#define   NV2A_COLOR_LOGIC_OP_OP_AND_REVERSE						0x00001502
#define   NV2A_COLOR_LOGIC_OP_OP_COPY						0x00001503
#define   NV2A_COLOR_LOGIC_OP_OP_AND_INVERTED					0x00001504
#define   NV2A_COLOR_LOGIC_OP_OP_NOOP						0x00001505
#define   NV2A_COLOR_LOGIC_OP_OP_XOR							0x00001506
#define   NV2A_COLOR_LOGIC_OP_OP_OR							0x00001507
#define   NV2A_COLOR_LOGIC_OP_OP_NOR							0x00001508
#define   NV2A_COLOR_LOGIC_OP_OP_EQUIV						0x00001509
#define   NV2A_COLOR_LOGIC_OP_OP_INVERT						0x0000150a
#define   NV2A_COLOR_LOGIC_OP_OP_OR_REVERSE						0x0000150b
#define   NV2A_COLOR_LOGIC_OP_OP_COPY_INVERTED					0x0000150c
#define   NV2A_COLOR_LOGIC_OP_OP_OR_INVERTED						0x0000150d
#define   NV2A_COLOR_LOGIC_OP_OP_NAND						0x0000150e
#define   NV2A_COLOR_LOGIC_OP_OP_SET							0x0000150f
#define  NV2A_LIGHT_MODEL_TWO_SIDE_ENABLE						0x000017c4
#define  NV2A_TX_SHADER_CULL_MODE							0x000017f8
#define   NV2A_TX_SHADER_CULL_MODE_TX0_S						(1 <<  0)
#define    NV2A_TX_SHADER_CULL_MODE_TX0_S_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX0_S_LESS					0x00000001
#define   NV2A_TX_SHADER_CULL_MODE_TX0_T						(1 <<  1)
#define    NV2A_TX_SHADER_CULL_MODE_TX0_T_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX0_T_LESS					0x00000002
#define   NV2A_TX_SHADER_CULL_MODE_TX0_R						(1 <<  2)
#define    NV2A_TX_SHADER_CULL_MODE_TX0_R_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX0_R_LESS					0x00000004
#define   NV2A_TX_SHADER_CULL_MODE_TX0_Q						(1 <<  3)
#define    NV2A_TX_SHADER_CULL_MODE_TX0_Q_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX0_Q_LESS					0x00000008
#define   NV2A_TX_SHADER_CULL_MODE_TX1_S						(1 <<  4)
#define    NV2A_TX_SHADER_CULL_MODE_TX1_S_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX1_S_LESS					0x00000010
#define   NV2A_TX_SHADER_CULL_MODE_TX1_T						(1 <<  5)
#define    NV2A_TX_SHADER_CULL_MODE_TX1_T_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX1_T_LESS					0x00000020
#define   NV2A_TX_SHADER_CULL_MODE_TX1_R						(1 <<  6)
#define    NV2A_TX_SHADER_CULL_MODE_TX1_R_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX1_R_LESS					0x00000040
#define   NV2A_TX_SHADER_CULL_MODE_TX1_Q						(1 <<  7)
#define    NV2A_TX_SHADER_CULL_MODE_TX1_Q_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX1_Q_LESS					0x00000080
#define   NV2A_TX_SHADER_CULL_MODE_TX2_S						(1 <<  8)
#define    NV2A_TX_SHADER_CULL_MODE_TX2_S_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX2_S_LESS					0x00000100
#define   NV2A_TX_SHADER_CULL_MODE_TX2_T						(1 <<  9)
#define    NV2A_TX_SHADER_CULL_MODE_TX2_T_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX2_T_LESS					0x00000200
#define   NV2A_TX_SHADER_CULL_MODE_TX2_R						(1 << 10)
#define    NV2A_TX_SHADER_CULL_MODE_TX2_R_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX2_R_LESS					0x00000400
#define   NV2A_TX_SHADER_CULL_MODE_TX2_Q						(1 << 11)
#define    NV2A_TX_SHADER_CULL_MODE_TX2_Q_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX2_Q_LESS					0x00000800
#define   NV2A_TX_SHADER_CULL_MODE_TX3_S						(1 << 12)
#define    NV2A_TX_SHADER_CULL_MODE_TX3_S_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX3_S_LESS					0x00001000
#define   NV2A_TX_SHADER_CULL_MODE_TX3_T						(1 << 13)
#define    NV2A_TX_SHADER_CULL_MODE_TX3_T_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX3_T_LESS					0x00002000
#define   NV2A_TX_SHADER_CULL_MODE_TX3_R						(1 << 14)
#define    NV2A_TX_SHADER_CULL_MODE_TX3_R_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX3_R_LESS					0x00004000
#define   NV2A_TX_SHADER_CULL_MODE_TX3_Q						(1 << 15)
#define    NV2A_TX_SHADER_CULL_MODE_TX3_Q_GEQUAL					0x00000000
#define    NV2A_TX_SHADER_CULL_MODE_TX3_Q_LESS					0x00008000
#define  NV2A_VERTEX_BEGIN_END							0x000017fc
#define   NV2A_VERTEX_BEGIN_END_STOP							0x00000000
#define   NV2A_VERTEX_BEGIN_END_POINTS						0x00000001
#define   NV2A_VERTEX_BEGIN_END_LINES						0x00000002
#define   NV2A_VERTEX_BEGIN_END_LINE_LOOP						0x00000003
#define   NV2A_VERTEX_BEGIN_END_LINE_STRIP						0x00000004
#define   NV2A_VERTEX_BEGIN_END_TRIANGLES						0x00000005
#define   NV2A_VERTEX_BEGIN_END_TRIANGLE_STRIP					0x00000006
#define   NV2A_VERTEX_BEGIN_END_TRIANGLE_FAN						0x00000007
#define   NV2A_VERTEX_BEGIN_END_QUADS						0x00000008
#define   NV2A_VERTEX_BEGIN_END_QUAD_STRIP						0x00000009
#define   NV2A_VERTEX_BEGIN_END_POLYGON						0x0000000a
#define  NV2A_VB_ELEMENT_U16								0x00001800
#define   NV2A_VB_ELEMENT_U16_I0_SHIFT						0
#define   NV2A_VB_ELEMENT_U16_I0_MASK						0x0000ffff
#define   NV2A_VB_ELEMENT_U16_I1_SHIFT						16
#define   NV2A_VB_ELEMENT_U16_I1_MASK						0xffff0000
#define  NV2A_VB_VERTEX_BATCH							0x00001810
#define   NV2A_VB_VERTEX_BATCH_OFFSET_SHIFT						0
#define   NV2A_VB_VERTEX_BATCH_OFFSET_MASK						0x00ffffff
#define   NV2A_VB_VERTEX_BATCH_COUNT_SHIFT						24
#define   NV2A_VB_VERTEX_BATCH_COUNT_MASK						0xff000000
#define  NV2A_VERTEX_DATA								0x00001818
#define  NV2A_TX_SHADER_CONST_EYE_X							0x0000181c
#define  NV2A_TX_SHADER_CONST_EYE_Y							0x00001820
#define  NV2A_TX_SHADER_CONST_EYE_Z							0x00001824
#define  NV2A_VTX_ATTR_4F_X(x)							(0x00001a00+((x)*16))
#define  NV2A_VTX_ATTR_4F_X__SIZE							0x00000010
#define  NV2A_VTX_ATTR_4F_Y(x)							(0x00001a04+((x)*16))
#define  NV2A_VTX_ATTR_4F_Y__SIZE							0x00000010
#define  NV2A_VTX_ATTR_4F_Z(x)							(0x00001a08+((x)*16))
#define  NV2A_VTX_ATTR_4F_Z__SIZE							0x00000010
#define  NV2A_VTX_ATTR_4F_W(x)							(0x00001a0c+((x)*16))
#define  NV2A_VTX_ATTR_4F_W__SIZE							0x00000010
#define  NV2A_TX_OFFSET(x)								(0x00001b00+((x)*64))
#define  NV2A_TX_OFFSET__SIZE							0x00000004
#define  NV2A_TX_FORMAT(x)								(0x00001b04+((x)*64))
#define  NV2A_TX_FORMAT__SIZE							0x00000004
#define   NV2A_TX_FORMAT_DMA0							(1 <<  0)
#define   NV2A_TX_FORMAT_DMA1							(1 <<  1)
#define   NV2A_TX_FORMAT_CUBIC							(1 <<  2)
#define   NV2A_TX_FORMAT_NO_BORDER							(1 <<  3)
#define   NV2A_TX_FORMAT_DIMS_SHIFT							4
#define   NV2A_TX_FORMAT_DIMS_MASK							0x000000f0
#define    NV2A_TX_FORMAT_DIMS_1D							0x00000010
#define    NV2A_TX_FORMAT_DIMS_2D							0x00000020
#define    NV2A_TX_FORMAT_DIMS_3D							0x00000030
#define   NV2A_TX_FORMAT_FORMAT_SHIFT						8
#define   NV2A_TX_FORMAT_FORMAT_MASK							0x0000ff00
#define    NV2A_TX_FORMAT_FORMAT_L8							0x00000000
#define    NV2A_TX_FORMAT_FORMAT_A8							0x00000100
#define    NV2A_TX_FORMAT_FORMAT_A1R5G5B5						0x00000200
#define    NV2A_TX_FORMAT_FORMAT_A8_RECT						0x00000300
#define    NV2A_TX_FORMAT_FORMAT_A4R4G4B4						0x00000400
#define    NV2A_TX_FORMAT_FORMAT_R5G6B5						0x00000500
#define    NV2A_TX_FORMAT_FORMAT_A8R8G8B8						0x00000600
#define    NV2A_TX_FORMAT_FORMAT_X8R8G8B8						0x00000700
#define    NV2A_TX_FORMAT_FORMAT_INDEX8						0x00000b00
#define    NV2A_TX_FORMAT_FORMAT_DXT1						0x00000c00
#define    NV2A_TX_FORMAT_FORMAT_DXT3						0x00000e00
#define    NV2A_TX_FORMAT_FORMAT_DXT5						0x00000f00
#define    NV2A_TX_FORMAT_FORMAT_A1R5G5B5_RECT					0x00001000
#define    NV2A_TX_FORMAT_FORMAT_R5G6B5_RECT						0x00001100
#define    NV2A_TX_FORMAT_FORMAT_A8R8G8B8_RECT					0x00001200
#define    NV2A_TX_FORMAT_FORMAT_L8_RECT						0x00001300
#define    NV2A_TX_FORMAT_FORMAT_A8L8						0x00001a00
#define    NV2A_TX_FORMAT_FORMAT_A8_RECT2						0x00001b00
#define    NV2A_TX_FORMAT_FORMAT_A4R4G4B4_RECT					0x00001d00
#define    NV2A_TX_FORMAT_FORMAT_R8G8B8_RECT						0x00001e00
#define    NV2A_TX_FORMAT_FORMAT_L8A8_RECT						0x00002000
#define    NV2A_TX_FORMAT_FORMAT_DSDT						0x00002800
#define    NV2A_TX_FORMAT_FORMAT_A16							0x00003200
#define    NV2A_TX_FORMAT_FORMAT_HILO16						0x00003300
#define    NV2A_TX_FORMAT_FORMAT_A16_RECT						0x00003500
#define    NV2A_TX_FORMAT_FORMAT_HILO16_RECT						0x00003600
#define    NV2A_TX_FORMAT_FORMAT_HILO8						0x00004400
#define    NV2A_TX_FORMAT_FORMAT_SIGNED_HILO8					0x00004500
#define    NV2A_TX_FORMAT_FORMAT_HILO8_RECT						0x00004600
#define    NV2A_TX_FORMAT_FORMAT_SIGNED_HILO8_RECT					0x00004700
#define    NV2A_TX_FORMAT_FORMAT_FLOAT_RGBA16_NV					0x00004a00
#define    NV2A_TX_FORMAT_FORMAT_FLOAT_RGBA32_NV					0x00004b00
#define    NV2A_TX_FORMAT_FORMAT_FLOAT_R32_NV					0x00004c00
#define   NV2A_TX_FORMAT_MIPMAP							(1 << 19)
#define   NV2A_TX_FORMAT_BASE_SIZE_U_SHIFT						20
#define   NV2A_TX_FORMAT_BASE_SIZE_U_MASK						0x00f00000
#define   NV2A_TX_FORMAT_BASE_SIZE_V_SHIFT						24
#define   NV2A_TX_FORMAT_BASE_SIZE_V_MASK						0x0f000000
#define   NV2A_TX_FORMAT_BASE_SIZE_W_SHIFT						28
#define   NV2A_TX_FORMAT_BASE_SIZE_W_MASK						0xf0000000
#define  NV2A_TX_WRAP(x)								(0x00001b08+((x)*64))
#define  NV2A_TX_WRAP__SIZE								0x00000004
#define   NV2A_TX_WRAP_S_SHIFT							0
#define   NV2A_TX_WRAP_S_MASK							0x000000ff
#define    NV2A_TX_WRAP_S_REPEAT							0x00000001
#define    NV2A_TX_WRAP_S_MIRRORED_REPEAT						0x00000002
#define    NV2A_TX_WRAP_S_CLAMP_TO_EDGE						0x00000003
#define    NV2A_TX_WRAP_S_CLAMP_TO_BORDER						0x00000004
#define    NV2A_TX_WRAP_S_CLAMP							0x00000005
#define   NV2A_TX_WRAP_T_SHIFT							8
#define   NV2A_TX_WRAP_T_MASK							0x00000f00
#define    NV2A_TX_WRAP_T_REPEAT							0x00000100
#define    NV2A_TX_WRAP_T_MIRRORED_REPEAT						0x00000200
#define    NV2A_TX_WRAP_T_CLAMP_TO_EDGE						0x00000300
#define    NV2A_TX_WRAP_T_CLAMP_TO_BORDER						0x00000400
#define    NV2A_TX_WRAP_T_CLAMP							0x00000500
#define   NV2A_TX_WRAP_R_SHIFT							16
#define   NV2A_TX_WRAP_R_MASK							0x000f0000
#define    NV2A_TX_WRAP_R_REPEAT							0x00010000
#define    NV2A_TX_WRAP_R_MIRRORED_REPEAT						0x00020000
#define    NV2A_TX_WRAP_R_CLAMP_TO_EDGE						0x00030000
#define    NV2A_TX_WRAP_R_CLAMP_TO_BORDER						0x00040000
#define    NV2A_TX_WRAP_R_CLAMP							0x00050000
#define  NV2A_TX_ENABLE(x)								(0x00001b0c+((x)*64))
#define  NV2A_TX_ENABLE__SIZE							0x00000004
#define   NV2A_TX_ENABLE_ANISO_SHIFT							4
#define   NV2A_TX_ENABLE_ANISO_MASK							0x00000030
#define    NV2A_TX_ENABLE_ANISO_NONE							0x00000000
#define    NV2A_TX_ENABLE_ANISO_2X							0x00000010
#define    NV2A_TX_ENABLE_ANISO_4X							0x00000020
#define    NV2A_TX_ENABLE_ANISO_8X							0x00000030
#define   NV2A_TX_ENABLE_MIPMAP_MAX_LOD_SHIFT					14
#define   NV2A_TX_ENABLE_MIPMAP_MAX_LOD_MASK						0x0003c000
#define   NV2A_TX_ENABLE_MIPMAP_MIN_LOD_SHIFT					26
#define   NV2A_TX_ENABLE_MIPMAP_MIN_LOD_MASK						0x3c000000
#define   NV2A_TX_ENABLE_ENABLE							(1 << 30)
#define  NV2A_TX_SWIZZLE(x)								(0x00001b10+((x)*64))
#define  NV2A_TX_SWIZZLE__SIZE							0x00000004
#define   NV2A_TX_SWIZZLE_RECT_PITCH_SHIFT						16
#define   NV2A_TX_SWIZZLE_RECT_PITCH_MASK						0xffff0000
#define  NV2A_TX_FILTER(x)								(0x00001b14+((x)*64))
#define  NV2A_TX_FILTER__SIZE							0x00000004
#define   NV2A_TX_FILTER_LOD_BIAS_SHIFT						8
#define   NV2A_TX_FILTER_LOD_BIAS_MASK						0x00000f00
#define   NV2A_TX_FILTER_MINIFY_SHIFT						16
#define   NV2A_TX_FILTER_MINIFY_MASK							0x000f0000
#define    NV2A_TX_FILTER_MINIFY_NEAREST						0x00010000
#define    NV2A_TX_FILTER_MINIFY_LINEAR						0x00020000
#define    NV2A_TX_FILTER_MINIFY_NEAREST_MIPMAP_NEAREST				0x00030000
#define    NV2A_TX_FILTER_MINIFY_LINEAR_MIPMAP_NEAREST				0x00040000
#define    NV2A_TX_FILTER_MINIFY_NEAREST_MIPMAP_LINEAR				0x00050000
#define    NV2A_TX_FILTER_MINIFY_LINEAR_MIPMAP_LINEAR				0x00060000
#define   NV2A_TX_FILTER_MAGNIFY_SHIFT						24
#define   NV2A_TX_FILTER_MAGNIFY_MASK						0x0f000000
#define    NV2A_TX_FILTER_MAGNIFY_NEAREST						0x01000000
#define    NV2A_TX_FILTER_MAGNIFY_LINEAR						0x02000000
#define  NV2A_TX_NPOT_SIZE(x)							(0x00001b1c+((x)*64))
#define  NV2A_TX_NPOT_SIZE__SIZE							0x00000004
#define   NV2A_TX_NPOT_SIZE_H_SHIFT							0
#define   NV2A_TX_NPOT_SIZE_H_MASK							0x0000ffff
#define   NV2A_TX_NPOT_SIZE_W_SHIFT							16
#define   NV2A_TX_NPOT_SIZE_W_MASK							0xffff0000
#define  NV2A_TX_PALETTE_OFFSET(x)							(0x00001b20+((x)*64))
#define  NV2A_TX_PALETTE_OFFSET__SIZE						0x00000004
#define  NV2A_TX_BORDER_COLOR(x)							(0x00001b24+((x)*64))
#define  NV2A_TX_BORDER_COLOR__SIZE							0x00000004
#define   NV2A_TX_BORDER_COLOR_B_SHIFT						0
#define   NV2A_TX_BORDER_COLOR_B_MASK						0x000000ff
#define   NV2A_TX_BORDER_COLOR_G_SHIFT						8
#define   NV2A_TX_BORDER_COLOR_G_MASK						0x0000ff00
#define   NV2A_TX_BORDER_COLOR_R_SHIFT						16
#define   NV2A_TX_BORDER_COLOR_R_MASK						0x00ff0000
#define   NV2A_TX_BORDER_COLOR_A_SHIFT						24
#define   NV2A_TX_BORDER_COLOR_A_MASK						0xff000000
#define  NV2A_TX_SHADER_OFFSET_MATRIX00(x)						(0x00001b28+((x)*64))
#define  NV2A_TX_SHADER_OFFSET_MATRIX00__SIZE					0x00000004
#define  NV2A_TX_SHADER_OFFSET_MATRIX01(x)						(0x00001b2c+((x)*64))
#define  NV2A_TX_SHADER_OFFSET_MATRIX01__SIZE					0x00000004
#define  NV2A_TX_SHADER_OFFSET_MATRIX11(x)						(0x00001b30+((x)*64))
#define  NV2A_TX_SHADER_OFFSET_MATRIX11__SIZE					0x00000004
#define  NV2A_TX_SHADER_OFFSET_MATRIX10(x)						(0x00001b34+((x)*64))
#define  NV2A_TX_SHADER_OFFSET_MATRIX10__SIZE					0x00000004
#define  NV2A_DEPTHCLIPCONTROL								0x00001d78 // Dxbx, Was NV2A_DEPTH_UNK17D8
#define   NV2A_DEPTHCLIPCONTROL_CLAMP_SHIFT						4
#define   NV2A_DEPTHCLIPCONTROL_CLAMP_MASK						0x000000f0
#define  NV2A_MULTISAMPLE_CONTROL							0x00001d7c
#define  NV2A_OCCLUDE_ZSTENCIL_EN                       0x00001d84 // Dxbx
#define  NV2A_CLEAR_DEPTH_VALUE							0x00001d8c
#define  NV2A_CLEAR_VALUE								0x00001d90
#define  NV2A_CLEAR_BUFFERS								0x00001d94
#define   NV2A_CLEAR_BUFFERS_COLOR_A							(1 <<  7)
#define   NV2A_CLEAR_BUFFERS_COLOR_B							(1 <<  6)
#define   NV2A_CLEAR_BUFFERS_COLOR_G							(1 <<  5)
#define   NV2A_CLEAR_BUFFERS_COLOR_R							(1 <<  4)
#define   NV2A_CLEAR_BUFFERS_STENCIL							(1 <<  1)
#define   NV2A_CLEAR_BUFFERS_DEPTH							(1 <<  0)
#define  NV2A_RC_COLOR0								0x00001e20
#define   NV2A_RC_COLOR0_B_SHIFT							0
#define   NV2A_RC_COLOR0_B_MASK							0x000000ff
#define   NV2A_RC_COLOR0_G_SHIFT							8
#define   NV2A_RC_COLOR0_G_MASK							0x0000ff00
#define   NV2A_RC_COLOR0_R_SHIFT							16
#define   NV2A_RC_COLOR0_R_MASK							0x00ff0000
#define   NV2A_RC_COLOR0_A_SHIFT							24
#define   NV2A_RC_COLOR0_A_MASK							0xff000000
#define  NV2A_RC_COLOR1								0x00001e24
#define   NV2A_RC_COLOR1_B_SHIFT							0
#define   NV2A_RC_COLOR1_B_MASK							0x000000ff
#define   NV2A_RC_COLOR1_G_SHIFT							8
#define   NV2A_RC_COLOR1_G_MASK							0x0000ff00
#define   NV2A_RC_COLOR1_R_SHIFT							16
#define   NV2A_RC_COLOR1_R_MASK							0x00ff0000
#define   NV2A_RC_COLOR1_A_SHIFT							24
#define   NV2A_RC_COLOR1_A_MASK							0xff000000
#define  NV2A_BACK_MATERIAL_SHININESS(x)						(0x00001e28+((x)*4))
#define  NV2A_BACK_MATERIAL_SHININESS__SIZE						0x00000006
#define  NV2A_RC_OUT_RGB(x)								(0x00001e40+((x)*4))
#define  NV2A_RC_OUT_RGB__SIZE							0x00000008
#define   NV2A_RC_OUT_RGB_CD_OUTPUT_SHIFT						0
#define   NV2A_RC_OUT_RGB_CD_OUTPUT_MASK						0x0000000f
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_ZERO						0x00000000
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_CONSTANT_COLOR0_NV				0x00000001
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_CONSTANT_COLOR1_NV				0x00000002
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_FOG						0x00000003
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_PRIMARY_COLOR_NV				0x00000004
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_SECONDARY_COLOR_NV				0x00000005
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_TEXTURE0_ARB					0x00000008
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_TEXTURE1_ARB					0x00000009
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_SPARE0_NV					0x0000000c
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_SPARE1_NV					0x0000000d
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x0000000e
#define    NV2A_RC_OUT_RGB_CD_OUTPUT_E_TIMES_F_NV					0x0000000f
#define   NV2A_RC_OUT_RGB_AB_OUTPUT_SHIFT						4
#define   NV2A_RC_OUT_RGB_AB_OUTPUT_MASK						0x000000f0
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_ZERO						0x00000000
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_CONSTANT_COLOR0_NV				0x00000010
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_CONSTANT_COLOR1_NV				0x00000020
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_FOG						0x00000030
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_PRIMARY_COLOR_NV				0x00000040
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_SECONDARY_COLOR_NV				0x00000050
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_TEXTURE0_ARB					0x00000080
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_TEXTURE1_ARB					0x00000090
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_SPARE0_NV					0x000000c0
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_SPARE1_NV					0x000000d0
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x000000e0
#define    NV2A_RC_OUT_RGB_AB_OUTPUT_E_TIMES_F_NV					0x000000f0
#define   NV2A_RC_OUT_RGB_SUM_OUTPUT_SHIFT						8
#define   NV2A_RC_OUT_RGB_SUM_OUTPUT_MASK						0x00000f00
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_ZERO						0x00000000
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_CONSTANT_COLOR0_NV				0x00000100
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_CONSTANT_COLOR1_NV				0x00000200
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_FOG						0x00000300
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_PRIMARY_COLOR_NV				0x00000400
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_SECONDARY_COLOR_NV				0x00000500
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_TEXTURE0_ARB					0x00000800
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_TEXTURE1_ARB					0x00000900
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_SPARE0_NV					0x00000c00
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_SPARE1_NV					0x00000d00
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_SPARE0_PLUS_SECONDARY_COLOR_NV			0x00000e00
#define    NV2A_RC_OUT_RGB_SUM_OUTPUT_E_TIMES_F_NV					0x00000f00
#define   NV2A_RC_OUT_RGB_CD_DOT_PRODUCT						(1 << 12)
#define   NV2A_RC_OUT_RGB_AB_DOT_PRODUCT						(1 << 13)
#define   NV2A_RC_OUT_RGB_MUX_SUM							(1 << 14)
#define   NV2A_RC_OUT_RGB_BIAS							(1 << 15)
#define    NV2A_RC_OUT_RGB_BIAS_NONE							0x00000000
#define    NV2A_RC_OUT_RGB_BIAS_BIAS_BY_NEGATIVE_ONE_HALF_NV				0x00008000
#define   NV2A_RC_OUT_RGB_SCALE_SHIFT						17
#define   NV2A_RC_OUT_RGB_SCALE_MASK							0x00000000
#define    NV2A_RC_OUT_RGB_SCALE_NONE						0x00000000
#define    NV2A_RC_OUT_RGB_SCALE_SCALE_BY_TWO_NV					0x00020000
#define    NV2A_RC_OUT_RGB_SCALE_SCALE_BY_FOUR_NV					0x00040000
#define    NV2A_RC_OUT_RGB_SCALE_SCALE_BY_ONE_HALF_NV				0x00060000
#define  NV2A_RC_ENABLE								0x00001e60
#define   NV2A_RC_ENABLE_NUM_COMBINERS_SHIFT						0
#define   NV2A_RC_ENABLE_NUM_COMBINERS_MASK						0x0000000f
#define  NV2A_TX_RCOMP								0x00001e6c
#define   NV2A_TX_RCOMP_NEVER							0x00000000
#define   NV2A_TX_RCOMP_GREATER							0x00000001
#define   NV2A_TX_RCOMP_EQUAL							0x00000002
#define   NV2A_TX_RCOMP_GEQUAL							0x00000003
#define   NV2A_TX_RCOMP_LESS								0x00000004
#define   NV2A_TX_RCOMP_NOTEQUAL							0x00000005
#define   NV2A_TX_RCOMP_LEQUAL							0x00000006
#define   NV2A_TX_RCOMP_ALWAYS							0x00000007
#define  NV2A_TX_SHADER_OP								0x00001e70
#define   NV2A_TX_SHADER_OP_TX0_SHIFT						0
#define   NV2A_TX_SHADER_OP_TX0_MASK							0x0000001f
#define    NV2A_TX_SHADER_OP_TX0_NONE						0x00000000
#define    NV2A_TX_SHADER_OP_TX0_TEXTURE_2D						0x00000001
#define    NV2A_TX_SHADER_OP_TX0_PASS_THROUGH					0x00000004
#define    NV2A_TX_SHADER_OP_TX0_CULL_FRAGMENT					0x00000005
#define    NV2A_TX_SHADER_OP_TX0_OFFSET_TEXTURE_2D					0x00000006
#define    NV2A_TX_SHADER_OP_TX0_DOT_PRODUCT_TEXTURE_2D				0x00000009
#define    NV2A_TX_SHADER_OP_TX0_DOT_PRODUCT_DEPTH_REPLACE				0x0000000a
#define    NV2A_TX_SHADER_OP_TX0_DEPENDANT_AR_TEXTURE_2D				0x0000000f
#define    NV2A_TX_SHADER_OP_TX0_DEPENDANT_GB_TEXTURE_2D				0x00000010
#define    NV2A_TX_SHADER_OP_TX0_DOT_PRODUCT						0x00000011
#define   NV2A_TX_SHADER_OP_TX1_SHIFT						5
#define   NV2A_TX_SHADER_OP_TX1_MASK							0x000003e0
#define    NV2A_TX_SHADER_OP_TX1_NONE						0x00000000
#define    NV2A_TX_SHADER_OP_TX1_TEXTURE_2D						0x00000020
#define    NV2A_TX_SHADER_OP_TX1_PASS_THROUGH					0x00000080
#define    NV2A_TX_SHADER_OP_TX1_CULL_FRAGMENT					0x000000a0
#define    NV2A_TX_SHADER_OP_TX1_OFFSET_TEXTURE_2D					0x000000c0
#define    NV2A_TX_SHADER_OP_TX1_DOT_PRODUCT_TEXTURE_2D				0x00000120
#define    NV2A_TX_SHADER_OP_TX1_DOT_PRODUCT_DEPTH_REPLACE				0x00000140
#define    NV2A_TX_SHADER_OP_TX1_DEPENDANT_AR_TEXTURE_2D				0x000001e0
#define    NV2A_TX_SHADER_OP_TX1_DEPENDANT_GB_TEXTURE_2D				0x00000200
#define    NV2A_TX_SHADER_OP_TX1_DOT_PRODUCT						0x00000220
#define   NV2A_TX_SHADER_OP_TX2_SHIFT						10
#define   NV2A_TX_SHADER_OP_TX2_MASK							0x00007c00
#define    NV2A_TX_SHADER_OP_TX2_NONE						0x00000000
#define    NV2A_TX_SHADER_OP_TX2_TEXTURE_2D						0x00000400
#define    NV2A_TX_SHADER_OP_TX2_PASS_THROUGH					0x00001000
#define    NV2A_TX_SHADER_OP_TX2_CULL_FRAGMENT					0x00001400
#define    NV2A_TX_SHADER_OP_TX2_OFFSET_TEXTURE_2D					0x00001800
#define    NV2A_TX_SHADER_OP_TX2_DOT_PRODUCT_TEXTURE_2D				0x00002400
#define    NV2A_TX_SHADER_OP_TX2_DOT_PRODUCT_DEPTH_REPLACE				0x00002800
#define    NV2A_TX_SHADER_OP_TX2_DEPENDANT_AR_TEXTURE_2D				0x00003c00
#define    NV2A_TX_SHADER_OP_TX2_DEPENDANT_GB_TEXTURE_2D				0x00004000
#define    NV2A_TX_SHADER_OP_TX2_DOT_PRODUCT						0x00004400
#define   NV2A_TX_SHADER_OP_TX3_SHIFT						15
#define   NV2A_TX_SHADER_OP_TX3_MASK							0x000f8000
#define    NV2A_TX_SHADER_OP_TX3_NONE						0x00000000
#define    NV2A_TX_SHADER_OP_TX3_TEXTURE_2D						0x00008000
#define    NV2A_TX_SHADER_OP_TX3_PASS_THROUGH					0x00020000
#define    NV2A_TX_SHADER_OP_TX3_CULL_FRAGMENT					0x00028000
#define    NV2A_TX_SHADER_OP_TX3_OFFSET_TEXTURE_2D					0x00030000
#define    NV2A_TX_SHADER_OP_TX3_DOT_PRODUCT_TEXTURE_2D				0x00048000
#define    NV2A_TX_SHADER_OP_TX3_DOT_PRODUCT_DEPTH_REPLACE				0x00050000
#define    NV2A_TX_SHADER_OP_TX3_DEPENDANT_AR_TEXTURE_2D				0x00078000
#define    NV2A_TX_SHADER_OP_TX3_DEPENDANT_GB_TEXTURE_2D				0x00080000
#define    NV2A_TX_SHADER_OP_TX3_DOT_PRODUCT						0x00088000
#define  NV2A_TX_SHADER_DOTMAPPING							0x00001e74
#define   NV2A_TX_SHADER_DOTMAPPING_TX0_SHIFT					0
#define   NV2A_TX_SHADER_DOTMAPPING_TX0_MASK						0x0000000f
#define   NV2A_TX_SHADER_DOTMAPPING_TX1_SHIFT					4
#define   NV2A_TX_SHADER_DOTMAPPING_TX1_MASK						0x000000f0
#define   NV2A_TX_SHADER_DOTMAPPING_TX2_SHIFT					8
#define   NV2A_TX_SHADER_DOTMAPPING_TX2_MASK						0x00000f00
#define   NV2A_TX_SHADER_DOTMAPPING_TX3_SHIFT					12
#define   NV2A_TX_SHADER_DOTMAPPING_TX3_MASK						0x0000f000
#define  NV2A_TX_SHADER_PREVIOUS							0x00001e78
#define   NV2A_TX_SHADER_PREVIOUS_TX0_SHIFT						8
#define   NV2A_TX_SHADER_PREVIOUS_TX0_MASK						0x00000f00
#define   NV2A_TX_SHADER_PREVIOUS_TX1_SHIFT						12
#define   NV2A_TX_SHADER_PREVIOUS_TX1_MASK						0x0000f000
#define   NV2A_TX_SHADER_PREVIOUS_TX2_SHIFT						16
#define   NV2A_TX_SHADER_PREVIOUS_TX2_MASK						0x00030000
#define   NV2A_TX_SHADER_PREVIOUS_TX3_SHIFT						20
#define   NV2A_TX_SHADER_PREVIOUS_TX3_MASK						0x00300000
#define  NV2A_ENGINE									0x00001e94
#define   NV2A_ENGINE_VP								(1 <<  1)
#define   NV2A_ENGINE_FIXED								(1 <<  2)
#define  NV2A_VP_UPLOAD_FROM_ID							0x00001e9c
#define  NV2A_VP_START_FROM_ID							0x00001ea0
#define  NV2A_VP_UPLOAD_CONST_ID							0x00001ea4
#define  NV2A_VIEWPORT_TRANSLATE_X							0x00001f00
#define  NV2A_VIEWPORT_TRANSLATE_Y							0x00001f04
#define  NV2A_VIEWPORT_TRANSLATE_Z							0x00001f08
#define  NV2A_VIEWPORT_TRANSLATE_W							0x00001f0c

typedef enum _TXBType {
	xt_Unknown = 0, // Defined as zero, to coincide with default value of DxbxRenderStateInfo.T and DxbxTextureStageStateInfo.T

	xtBOOL,
	xtBYTE,
	xtD3DBLEND,
	xtD3DBLENDOP,
	xtD3DCLEAR,
	xtD3DCMPFUNC,
	xtD3DCOLOR,
	xtD3DCOLORWRITEENABLE,
	xtD3DCUBEMAP_FACES,
	xtD3DCULL,
	xtD3DDCC,
	xtD3DFILLMODE,
	xtD3DFOGMODE,
	xtD3DFORMAT,
	xtD3DFRONT,
	xtD3DLOGICOP,
	xtD3DMCS,
	xtD3DMULTISAMPLE_TYPE,
	xtD3DMULTISAMPLEMODE,
	xtD3DPRIMITIVETYPE,
	xtD3DRESOURCETYPE,
	xtD3DSAMPLEALPHA,
	xtD3DSHADEMODE,
	xtD3DSTENCILOP,
	xtD3DSWATH,
	xtD3DTEXTUREADDRESS, // Used for TextureStageState X_D3DTSS_ADDRESSU, X_D3DTSS_ADDRESSV and X_D3DTSS_ADDRESSW
	xtD3DTEXTUREFILTERTYPE, // Used for TextureStageState X_D3DTSS_MAGFILTER, X_D3DTSS_MINFILTER and X_D3DTSS_MIPFILTER
	xtD3DTEXTUREOP, // Used for TextureStageState X_D3DTSS_COLOROP and X_D3DTSS_ALPHAOP
	xtD3DTEXTURESTAGESTATETYPE,
	xtD3DTRANSFORMSTATETYPE,
	xtD3DVERTEXBLENDFLAGS,
	xtD3DVSDE,
	xtD3DWRAP,
	xtDWORD,
	xtFloat,
	xtLONG
} TXBType;

typedef struct _RenderStateInfo {
	char *S;   // String representation.
	WORD V;    // The XDK version since which a render state was introduced (using the 5911 declarations as a base).
	TXBType T; // The Xbox data type. Defaults to xt_Unknown.
	DWORD M;   // The related push buffer method. Not always a 1-to-1 mapping. Needs push-buffer interpretation & conversion code.
	D3DRENDERSTATETYPE PC; // Map XBox to PC render state. Defaults to D3DRS_UNSUPPORTED.
	char *N;   // XDK notes. Defaults to ''.
}
RenderStateInfo;

#define D3DRS_NONE ((D3DRENDERSTATETYPE)0)

extern const RenderStateInfo DxbxRenderStateInfo[];

#endif